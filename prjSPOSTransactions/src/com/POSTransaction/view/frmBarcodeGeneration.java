/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.POSTransaction.view;

import com.POSGlobal.controller.clsGlobalVarClass;
import com.POSGlobal.controller.clsItemPriceDtl;
import com.POSGlobal.controller.clsPLUItemDtl;
import com.POSGlobal.controller.clsUtility;
import com.POSGlobal.view.frmOkPopUp;
import com.POSGlobal.view.frmSearchFormDialog;
import java.awt.Desktop;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.PrintWriter;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.util.Date;
import java.util.Map;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class frmBarcodeGeneration extends javax.swing.JFrame
{

    private clsUtility objUtility;
    private StringBuilder sqlBuilder;
    private DecimalFormat decimalFormatFor2DecPoint;
    private int intDecorationItemRow=-1;

    public frmBarcodeGeneration()
    {
        initComponents();
        try
        {
            Timer timer = new Timer(500, new ActionListener()
            {
                @Override
                public void actionPerformed(ActionEvent e)
                {
                    Date date1 = new Date();
                    String newstr = String.format("%tr", date1);
                    String dateAndTime = clsGlobalVarClass.gPOSDateToDisplay + " " + newstr;
                    lblDate.setText(dateAndTime);
                }
            });
            timer.setRepeats(true);
            timer.setCoalesce(true);
            timer.setInitialDelay(0);
            timer.start();

            lblUserCode.setText(clsGlobalVarClass.gUserCode);
            lblPosName.setText(clsGlobalVarClass.gPOSName);
            lblModuleName.setText(clsGlobalVarClass.gSelectedModule);
            lblDate.setText(clsGlobalVarClass.gPOSDateToDisplay);

            objUtility = new clsUtility();
            sqlBuilder = new StringBuilder();

            decimalFormatFor2DecPoint = new DecimalFormat("0.00");

        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        panelHeader = new javax.swing.JPanel();
        lblProductName = new javax.swing.JLabel();
        lblModuleName = new javax.swing.JLabel();
        lblformName = new javax.swing.JLabel();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        lblPosName = new javax.swing.JLabel();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        lblUserCode = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblHOSign = new javax.swing.JLabel();
        panelLayout = new JPanel() {  
            public void paintComponent(Graphics g) {  
                Image img = Toolkit.getDefaultToolkit().getImage(  
                    getClass().getResource("/com/POSMaster/images/imgBGJPOS.png"));  
                g.drawImage(img, 0, 0, this.getWidth(), this.getHeight(), this);  
            }  
        };  
        ;
        panelBody = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        scrCharacteristics = new javax.swing.JScrollPane();
        tblProductDetails = new javax.swing.JTable();
        lblItemCode = new javax.swing.JLabel();
        txtItemCode = new javax.swing.JTextField();
        txtItemName = new javax.swing.JTextField();
        lblExternalCode = new javax.swing.JLabel();
        txtExteralCode = new javax.swing.JTextField();
        lblUOM = new javax.swing.JLabel();
        txtUOM = new javax.swing.JTextField();
        btnNew1 = new javax.swing.JButton();
        txtBarcodeString = new javax.swing.JTextField();
        lblTotalAmount = new javax.swing.JLabel();
        txtTotalAmount = new javax.swing.JTextField();
        lblDecorationItemPrice = new javax.swing.JLabel();
        txtDecorationItemPrice = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setExtendedState(MAXIMIZED_BOTH);
        setMinimumSize(new java.awt.Dimension(800, 600));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosed(java.awt.event.WindowEvent evt)
            {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        panelHeader.setBackground(new java.awt.Color(69, 164, 238));
        panelHeader.setLayout(new javax.swing.BoxLayout(panelHeader, javax.swing.BoxLayout.LINE_AXIS));

        lblProductName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblProductName.setForeground(new java.awt.Color(255, 255, 255));
        lblProductName.setText("SPOS- ");
        panelHeader.add(lblProductName);

        lblModuleName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblModuleName.setForeground(new java.awt.Color(255, 255, 255));
        panelHeader.add(lblModuleName);

        lblformName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblformName.setForeground(new java.awt.Color(255, 255, 255));
        lblformName.setText("-Barcode Generation");
        panelHeader.add(lblformName);
        panelHeader.add(filler4);
        panelHeader.add(filler5);

        lblPosName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPosName.setForeground(new java.awt.Color(255, 255, 255));
        lblPosName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPosName.setMaximumSize(new java.awt.Dimension(321, 30));
        lblPosName.setMinimumSize(new java.awt.Dimension(321, 30));
        lblPosName.setPreferredSize(new java.awt.Dimension(321, 30));
        panelHeader.add(lblPosName);
        panelHeader.add(filler6);

        lblUserCode.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblUserCode.setForeground(new java.awt.Color(255, 255, 255));
        lblUserCode.setMaximumSize(new java.awt.Dimension(90, 30));
        lblUserCode.setMinimumSize(new java.awt.Dimension(90, 30));
        lblUserCode.setPreferredSize(new java.awt.Dimension(90, 30));
        panelHeader.add(lblUserCode);

        lblDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 255, 255));
        lblDate.setMaximumSize(new java.awt.Dimension(192, 30));
        lblDate.setMinimumSize(new java.awt.Dimension(192, 30));
        lblDate.setPreferredSize(new java.awt.Dimension(192, 30));
        panelHeader.add(lblDate);

        lblHOSign.setMaximumSize(new java.awt.Dimension(34, 30));
        lblHOSign.setMinimumSize(new java.awt.Dimension(34, 30));
        lblHOSign.setPreferredSize(new java.awt.Dimension(34, 30));
        panelHeader.add(lblHOSign);

        getContentPane().add(panelHeader, java.awt.BorderLayout.PAGE_START);

        panelLayout.setOpaque(false);
        panelLayout.setLayout(new java.awt.GridBagLayout());

        panelBody.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        panelBody.setMinimumSize(new java.awt.Dimension(800, 570));
        panelBody.setOpaque(false);

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtn1.png"))); // NOI18N
        btnCancel.setText("CLOSE");
        btnCancel.setToolTipText("Close Area Master");
        btnCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancel.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtn2.png"))); // NOI18N
        btnCancel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btnCancelMouseClicked(evt);
            }
        });
        btnCancel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCancelActionPerformed(evt);
            }
        });

        btnNew.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnNew.setForeground(new java.awt.Color(255, 255, 255));
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtnLong1.png"))); // NOI18N
        btnNew.setText("Generate Barcode");
        btnNew.setToolTipText("Save Area Master");
        btnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtnLong2.png"))); // NOI18N
        btnNew.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btnNewMouseClicked(evt);
            }
        });
        btnNew.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnNewActionPerformed(evt);
            }
        });
        btnNew.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btnNewKeyPressed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtn1.png"))); // NOI18N
        btnReset.setText("CLEAR");
        btnReset.setToolTipText("Reset All Fields");
        btnReset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReset.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtn2.png"))); // NOI18N
        btnReset.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btnResetMouseClicked(evt);
            }
        });
        btnReset.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnResetActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtn1.png"))); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.setToolTipText("Add Delivery Charges");
        btnAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtn2.png"))); // NOI18N
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btnAddMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                btnAddMouseEntered(evt);
            }
        });
        btnAdd.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btnAddKeyPressed(evt);
            }
        });

        btnRemove.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRemove.setForeground(new java.awt.Color(255, 255, 255));
        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtn1.png"))); // NOI18N
        btnRemove.setText("REMOVE");
        btnRemove.setToolTipText(" Remove Delivery Charges");
        btnRemove.setEnabled(false);
        btnRemove.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRemove.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtn2.png"))); // NOI18N
        btnRemove.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btnRemoveMouseClicked(evt);
            }
        });
        btnRemove.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnRemoveActionPerformed(evt);
            }
        });

        tblProductDetails.setRowHeight(30);
        tblProductDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Item Code", "External Code", "Item Name", "UOM", "Value", "Amount", "Select"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tblProductDetails.setColumnSelectionAllowed(true);
        tblProductDetails.setRowHeight(25);
        tblProductDetails.getTableHeader().setReorderingAllowed(false);
        tblProductDetails.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                tblProductDetailsMouseClicked(evt);
            }
        });
        scrCharacteristics.setViewportView(tblProductDetails);
        tblProductDetails.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (tblProductDetails.getColumnModel().getColumnCount() > 0)
        {
            tblProductDetails.getColumnModel().getColumn(0).setPreferredWidth(30);
            tblProductDetails.getColumnModel().getColumn(1).setPreferredWidth(45);
            tblProductDetails.getColumnModel().getColumn(2).setPreferredWidth(300);
            tblProductDetails.getColumnModel().getColumn(3).setPreferredWidth(30);
            tblProductDetails.getColumnModel().getColumn(4).setPreferredWidth(30);
            tblProductDetails.getColumnModel().getColumn(5).setPreferredWidth(30);
            tblProductDetails.getColumnModel().getColumn(6).setResizable(false);
            tblProductDetails.getColumnModel().getColumn(6).setPreferredWidth(15);
        }

        lblItemCode.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblItemCode.setText("Item Code   :");

        txtItemCode.setEditable(false);
        txtItemCode.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                txtItemCodeMouseClicked(evt);
            }
        });
        txtItemCode.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                txtItemCodeKeyPressed(evt);
            }
        });

        txtItemName.setEditable(false);
        txtItemName.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                txtItemNameMouseClicked(evt);
            }
        });
        txtItemName.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                txtItemNameKeyPressed(evt);
            }
        });

        lblExternalCode.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblExternalCode.setText("External Code/Product Code    :");

        txtExteralCode.setEditable(false);
        txtExteralCode.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                txtExteralCodeMouseClicked(evt);
            }
        });
        txtExteralCode.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                txtExteralCodeKeyPressed(evt);
            }
        });

        lblUOM.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblUOM.setText("Unit Of Measurement    :");

        txtUOM.setEditable(false);
        txtUOM.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                txtUOMMouseClicked(evt);
            }
        });
        txtUOM.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                txtUOMKeyPressed(evt);
            }
        });

        btnNew1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnNew1.setForeground(new java.awt.Color(255, 255, 255));
        btnNew1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtnLong1.png"))); // NOI18N
        btnNew1.setText("Calculate Amount");
        btnNew1.setToolTipText("Save Area Master");
        btnNew1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtnLong2.png"))); // NOI18N
        btnNew1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btnNew1MouseClicked(evt);
            }
        });
        btnNew1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnNew1ActionPerformed(evt);
            }
        });
        btnNew1.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btnNew1KeyPressed(evt);
            }
        });

        txtBarcodeString.setEditable(false);
        txtBarcodeString.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                txtBarcodeStringMouseClicked(evt);
            }
        });
        txtBarcodeString.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                txtBarcodeStringKeyPressed(evt);
            }
        });

        lblTotalAmount.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblTotalAmount.setText("Total Amount :");

        txtTotalAmount.setEditable(false);
        txtTotalAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalAmount.setText("0.00");
        txtTotalAmount.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                txtTotalAmountMouseClicked(evt);
            }
        });
        txtTotalAmount.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                txtTotalAmountKeyPressed(evt);
            }
        });

        lblDecorationItemPrice.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblDecorationItemPrice.setText("Decoration Item Price :");

        txtDecorationItemPrice.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDecorationItemPrice.setText("0.00");
        txtDecorationItemPrice.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                txtDecorationItemPriceMouseClicked(evt);
            }
        });
        txtDecorationItemPrice.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                txtDecorationItemPriceKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelBodyLayout = new javax.swing.GroupLayout(panelBody);
        panelBody.setLayout(panelBodyLayout);
        panelBodyLayout.setHorizontalGroup(
            panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrCharacteristics)
            .addGroup(panelBodyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelBodyLayout.createSequentialGroup()
                        .addComponent(lblItemCode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblExternalCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBodyLayout.createSequentialGroup()
                        .addComponent(txtExteralCode, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblUOM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUOM, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBodyLayout.createSequentialGroup()
                        .addComponent(txtItemName)
                        .addGap(62, 62, 62))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBodyLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtBarcodeString, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBodyLayout.createSequentialGroup()
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBodyLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBodyLayout.createSequentialGroup()
                        .addComponent(btnNew1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTotalAmount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDecorationItemPrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDecorationItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelBodyLayout.setVerticalGroup(
            panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBodyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblExternalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtExteralCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblUOM, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtUOM, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(scrCharacteristics, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblDecorationItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDecorationItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNew1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBarcodeString, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        panelLayout.add(panelBody, new java.awt.GridBagConstraints());

        getContentPane().add(panelLayout, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseClicked
        // TODO add your handling code here:
        dispose();
        clsGlobalVarClass.hmActiveForms.remove("Barcode Generation");
    }//GEN-LAST:event_btnCancelMouseClicked

    private void btnNewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewMouseClicked
        if (tblProductDetails.getRowCount() > 0)
        {
            funGenerateBarcode();
        }
        else
        {
            new frmOkPopUp(this, "Please Select Item.", "Error", 0).setVisible(true);
            return;
        }
    }//GEN-LAST:event_btnNewMouseClicked

    private void btnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseClicked

        funClearFields();
        ((DefaultTableModel) tblProductDetails.getModel()).setRowCount(0);
        txtBarcodeString.setText("");
    }//GEN-LAST:event_btnResetMouseClicked

    private void btnNewKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnNewKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnNewKeyPressed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_btnNewActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed

    }//GEN-LAST:event_btnResetActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        dispose();
        clsGlobalVarClass.hmActiveForms.remove("Barcode Generation");
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseClicked

        funAddButtonClicked();

    }//GEN-LAST:event_btnAddMouseClicked

    private void btnAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddMouseEntered

    private void btnAddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAddKeyPressed

    }//GEN-LAST:event_btnAddKeyPressed

    private void btnRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveMouseClicked

        funRemoveSelectedRows();
    }//GEN-LAST:event_btnRemoveMouseClicked

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void tblProductDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductDetailsMouseClicked

        funTblMouseClicked();
    }//GEN-LAST:event_tblProductDetailsMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        clsGlobalVarClass.hmActiveForms.remove("Barcode Generation");
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        clsGlobalVarClass.hmActiveForms.remove("Barcode Generation");
    }//GEN-LAST:event_formWindowClosing

    private void txtItemCodeMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_txtItemCodeMouseClicked
    {//GEN-HEADEREND:event_txtItemCodeMouseClicked

        funSelectItemCode();
    }//GEN-LAST:event_txtItemCodeMouseClicked

    private void txtItemCodeKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtItemCodeKeyPressed
    {//GEN-HEADEREND:event_txtItemCodeKeyPressed

    }//GEN-LAST:event_txtItemCodeKeyPressed

    private void txtItemNameMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_txtItemNameMouseClicked
    {//GEN-HEADEREND:event_txtItemNameMouseClicked

    }//GEN-LAST:event_txtItemNameMouseClicked

    private void txtItemNameKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtItemNameKeyPressed
    {//GEN-HEADEREND:event_txtItemNameKeyPressed

    }//GEN-LAST:event_txtItemNameKeyPressed

    private void txtExteralCodeMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_txtExteralCodeMouseClicked
    {//GEN-HEADEREND:event_txtExteralCodeMouseClicked

    }//GEN-LAST:event_txtExteralCodeMouseClicked

    private void txtExteralCodeKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtExteralCodeKeyPressed
    {//GEN-HEADEREND:event_txtExteralCodeKeyPressed

    }//GEN-LAST:event_txtExteralCodeKeyPressed

    private void txtUOMMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_txtUOMMouseClicked
    {//GEN-HEADEREND:event_txtUOMMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUOMMouseClicked

    private void txtUOMKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtUOMKeyPressed
    {//GEN-HEADEREND:event_txtUOMKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUOMKeyPressed

    private void btnNew1MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_btnNew1MouseClicked
    {//GEN-HEADEREND:event_btnNew1MouseClicked
        if (tblProductDetails.getRowCount() <= 0)
        {
            new frmOkPopUp(this, "Please Select Items", "Error", 1).setVisible(true);
            return;
        }
        else
        {
            try
            {
                funCalculateAmountAsPerMaster();
                funCalculateDecorationItemAmount();
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnNew1MouseClicked

    private void btnNew1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnNew1ActionPerformed
    {//GEN-HEADEREND:event_btnNew1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNew1ActionPerformed

    private void btnNew1KeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_btnNew1KeyPressed
    {//GEN-HEADEREND:event_btnNew1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNew1KeyPressed

    private void txtBarcodeStringMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_txtBarcodeStringMouseClicked
    {//GEN-HEADEREND:event_txtBarcodeStringMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarcodeStringMouseClicked

    private void txtBarcodeStringKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtBarcodeStringKeyPressed
    {//GEN-HEADEREND:event_txtBarcodeStringKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarcodeStringKeyPressed

    private void txtTotalAmountMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_txtTotalAmountMouseClicked
    {//GEN-HEADEREND:event_txtTotalAmountMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalAmountMouseClicked

    private void txtTotalAmountKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtTotalAmountKeyPressed
    {//GEN-HEADEREND:event_txtTotalAmountKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalAmountKeyPressed

    private void txtDecorationItemPriceMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_txtDecorationItemPriceMouseClicked
    {//GEN-HEADEREND:event_txtDecorationItemPriceMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDecorationItemPriceMouseClicked

    private void txtDecorationItemPriceKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtDecorationItemPriceKeyPressed
    {//GEN-HEADEREND:event_txtDecorationItemPriceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDecorationItemPriceKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNew1;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnReset;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDecorationItemPrice;
    private javax.swing.JLabel lblExternalCode;
    private javax.swing.JLabel lblHOSign;
    private javax.swing.JLabel lblItemCode;
    private javax.swing.JLabel lblModuleName;
    private javax.swing.JLabel lblPosName;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblTotalAmount;
    private javax.swing.JLabel lblUOM;
    private javax.swing.JLabel lblUserCode;
    private javax.swing.JLabel lblformName;
    private javax.swing.JPanel panelBody;
    private javax.swing.JPanel panelHeader;
    private javax.swing.JPanel panelLayout;
    private javax.swing.JScrollPane scrCharacteristics;
    private javax.swing.JTable tblProductDetails;
    private javax.swing.JTextField txtBarcodeString;
    private javax.swing.JTextField txtDecorationItemPrice;
    private javax.swing.JTextField txtExteralCode;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtTotalAmount;
    private javax.swing.JTextField txtUOM;
    // End of variables declaration//GEN-END:variables

    private void funSelectItemCode()
    {
        try
        {
            objUtility.funCallForSearchForm("MenuItem");
            new frmSearchFormDialog(this, true).setVisible(true);
            if (clsGlobalVarClass.gSearchItemClicked)
            {
                Object[] data = clsGlobalVarClass.gArrListSearchData.toArray();
                funSetData(data);
                clsGlobalVarClass.gSearchItemClicked = false;
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }

    private void funSetData(Object[] data)
    {
        try
        {
            String itemCode = data[0].toString();

            sqlBuilder.setLength(0);
            sqlBuilder.append("select a.strItemCode,a.strItemName,a.strExternalCode,a.strUOM  "
                    + "from tblitemmaster a "
                    + "where a.strItemCode='" + itemCode + "' ");
            ResultSet rsProductDtl = clsGlobalVarClass.dbMysql.executeResultSet(sqlBuilder.toString());
            if (rsProductDtl.next())
            {
                txtItemCode.setText(rsProductDtl.getString(1));
                txtItemName.setText(rsProductDtl.getString(2));
                txtExteralCode.setText(rsProductDtl.getString(3));
                txtUOM.setText(rsProductDtl.getString(4));

            }
            rsProductDtl.close();

        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }

    private void funAddButtonClicked()
    {
        if (txtItemCode.getText().trim().isEmpty())
        {
            new frmOkPopUp(this, "Please Select Item.", "Error", 0).setVisible(true);
            return;
        }
        else if (txtItemName.getText().trim().isEmpty())
        {
            new frmOkPopUp(this, "Please Select Item.", "Error", 0).setVisible(true);
            return;
        }
        else if (txtExteralCode.getText().trim().isEmpty())
        {
            new frmOkPopUp(this, "External/Product/Reference Code Can Not Be Blank.", "Error", 0).setVisible(true);
            return;
        }
        else if (txtUOM.getText().trim().isEmpty())
        {
            new frmOkPopUp(this, "Unit Of Measurement Can Not Be Blank.", "Error", 0).setVisible(true);
            return;
        }
        else
        {
            funAddProductToTable();
        }
    }

    private void funAddProductToTable()
    {
        String itemCode = txtItemCode.getText();
        String externalCode = txtExteralCode.getText();
        String itemNmae = txtItemName.getText();
        String uom = txtUOM.getText();
        String value = "1";
        String amount = "0";

        Object row[] =
        {
            itemCode, externalCode, itemNmae, uom, value, amount, false
        };

        DefaultTableModel defaultTableModel = (DefaultTableModel) tblProductDetails.getModel();

        defaultTableModel.addRow(row);

        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
        tblProductDetails.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        tblProductDetails.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);

        funClearFields();
    }

    private void funClearFields()
    {
        txtItemCode.setText("");
        txtItemName.setText("");
        txtExteralCode.setText("");
        txtUOM.setText("");
        txtTotalAmount.setText("0.00");
        txtDecorationItemPrice.setText("0.00");

    }

    private void funTblMouseClicked()
    {
        for (int row = 0; row < tblProductDetails.getRowCount(); row++)
        {
            if (Boolean.valueOf(tblProductDetails.getValueAt(row, 6).toString()))
            {
                btnRemove.setEnabled(true);
                break;
            }
            else
            {
                btnRemove.setEnabled(false);
            }
        }

        funCalculateTotalAmount();
    }

    private void funRemoveSelectedRows()
    {
        DefaultTableModel dtm = (DefaultTableModel) tblProductDetails.getModel();

        for (int row = 0; row < dtm.getRowCount(); row++)
        {
            if (Boolean.valueOf(dtm.getValueAt(row, 6).toString()))
            {
                dtm.removeRow(row);
            }
        }
        btnRemove.setEnabled(false);
    }

    private void funCalculateAmountAsPerMaster() throws Exception
    {

        for (int row = 0; row < tblProductDetails.getRowCount(); row++)
        {
            if (tblProductDetails.getValueAt(row, 3).toString().equalsIgnoreCase("Gram"))
            {
                String areaCodeForPricing = "";
                if (clsGlobalVarClass.gAreaWisePricing.equals("N"))
                {
                    areaCodeForPricing = clsGlobalVarClass.gAreaCodeForTrans;
                }
                else
                {
                    areaCodeForPricing = clsGlobalVarClass.gDineInAreaForDirectBiller;
                }
                Map<String, clsItemPriceDtl> x = clsPLUItemDtl.hmPLUItemDtl.get(areaCodeForPricing);

                String itemName = tblProductDetails.getValueAt(row, 2).toString();
                clsItemPriceDtl priceObject = x.get(itemName);

                double dblPrice = funGetFinalPrice(priceObject);//day wise price
                double dblGram = Double.parseDouble(tblProductDetails.getValueAt(row, 4).toString());//grams
                double dblFinalPrice = (dblPrice * dblGram) / 1000;//

                tblProductDetails.setValueAt(Math.rint(dblFinalPrice), row, 5);
            }
            else if (tblProductDetails.getValueAt(row, 3).toString().equalsIgnoreCase("Unit") && tblProductDetails.getValueAt(row, 1).toString().length() == 13)//for 13 digit barcode
            {
                String areaCodeForPricing = "";
                if (clsGlobalVarClass.gAreaWisePricing.equals("N"))
                {
                    areaCodeForPricing = clsGlobalVarClass.gAreaCodeForTrans;
                }
                else
                {
                    areaCodeForPricing = clsGlobalVarClass.gDineInAreaForDirectBiller;
                }
                Map<String, clsItemPriceDtl> x = clsPLUItemDtl.hmPLUItemDtl.get(areaCodeForPricing);

                String itemName = tblProductDetails.getValueAt(row, 2).toString();
                clsItemPriceDtl priceObject = x.get(itemName);

                double dblPrice = funGetFinalPrice(priceObject);//day wise price
                double units = Double.parseDouble(tblProductDetails.getValueAt(row, 4).toString());//units
                double dblFinalPrice = dblPrice * units;//

                tblProductDetails.setValueAt(Math.rint(dblFinalPrice), row, 5);
            }
//            else if (tblProductDetails.getValueAt(row, 3).toString().equalsIgnoreCase("Kg"))
//            {
//                String areaCodeForPricing = "";
//                if (clsGlobalVarClass.gAreaWisePricing.equals("N"))
//                {
//                    areaCodeForPricing = clsGlobalVarClass.gAreaCodeForTrans;
//                }
//                else
//                {
//                    areaCodeForPricing = clsGlobalVarClass.gDirectAreaCode;
//                }
//                Map<String, clsItemPriceDtl> x = clsPLUItemDtl.hmPLUItemDtl.get(areaCodeForPricing);
//
//                String itemName = tblProductDetails.getValueAt(row, 2).toString();
//                clsItemPriceDtl priceObject = x.get(itemName);
//
//                double dblPrice = funGetFinalPrice(priceObject);//day wise price/kg
//                double dblQuantity=Double.parseDouble(tblProductDetails.getValueAt(row, 4).toString());//quantity
//                double dblFinalPrice=dblPrice*dblQuantity;
//                
//                tblProductDetails.setValueAt(dblFinalPrice, row, 5);
//            }

            funCalculateTotalAmount();
        }
    }

    private double funGetFinalPrice(clsItemPriceDtl ob) throws Exception
    {
        double Price = 0.00;
        if (clsGlobalVarClass.gPriceFrom.equals("Item Master"))
        {
            String sql_Price = "select dblSalePrice from tblitemmaster where strItemCode='" + ob.getStrItemCode() + "'";
            ResultSet rsItemSalePrice = clsGlobalVarClass.dbMysql.executeResultSet(sql_Price);
            if (rsItemSalePrice.next())
            {
                Price = rsItemSalePrice.getDouble(1);
            }
            rsItemSalePrice.close();
        }
        else
        {

            switch (objUtility.funGetDayForPricing())
            {
                case "strPriceMonday":
                    Price = ob.getStrPriceMonday();
                    break;

                case "strPriceTuesday":
                    Price = ob.getStrPriceTuesday();
                    break;

                case "strPriceWednesday":
                    Price = ob.getStrPriceWednesday();
                    break;

                case "strPriceThursday":
                    Price = ob.getStrPriceThursday();
                    break;

                case "strPriceFriday":
                    Price = ob.getStrPriceFriday();
                    break;

                case "strPriceSaturday":
                    Price = ob.getStrPriceSaturday();
                    break;

                case "strPriceSunday":
                    Price = ob.getStrPriceSunday();
                    break;
            }
        }
        return Price;
    }

    private void funGenerateBarcode()
    {
        StringBuilder barcodeBuilder = new StringBuilder();

        for (int row = 0; row < tblProductDetails.getRowCount(); row++)
        {
            if (tblProductDetails.getValueAt(row, 3).toString().equalsIgnoreCase("Gram"))//weight(21)
            {
                barcodeBuilder.append(",21").append(tblProductDetails.getValueAt(row, 1).toString()).append(String.format("%05d", (int) Double.parseDouble(tblProductDetails.getValueAt(row, 4).toString())));
            }
            else if (tblProductDetails.getValueAt(row, 3).toString().equalsIgnoreCase("Kg"))//price(23)
            {
                barcodeBuilder.append(",23").append(tblProductDetails.getValueAt(row, 1).toString()).append(String.format("%05d", (int) Double.parseDouble(tblProductDetails.getValueAt(row, 5).toString())));
            }
            else if (tblProductDetails.getValueAt(row, 3).toString().equalsIgnoreCase("Unit"))//unit or price(62)
            {
                if (tblProductDetails.getValueAt(row, 1).toString().length() == 13)
                {
                    int value = (int) Double.parseDouble(tblProductDetails.getValueAt(row, 4).toString());
                    for (int i = 0; i < value; i++)
                    {
                        barcodeBuilder.append(",").append(tblProductDetails.getValueAt(row, 1).toString());
                    }
                }
                else
                {
                    barcodeBuilder.append(",23").append(tblProductDetails.getValueAt(row, 1).toString()).append(String.format("%05d", (int) Double.parseDouble(tblProductDetails.getValueAt(row, 5).toString())));
                }
            }
        }
        barcodeBuilder.deleteCharAt(0);

        txtBarcodeString.setText(barcodeBuilder.toString());

        funGenerateBarcodeTextFile(barcodeBuilder.toString());
    }

    private void funGenerateBarcodeTextFile(String barcodeString)
    {
        try
        {
            String filePath = System.getProperty("user.dir");
            File file = new File(filePath + "/Temp/Temp_2D_Barcode.txt");
            PrintWriter pw = new PrintWriter(file);

            pw.println(barcodeString);

            pw.flush();
            pw.close();

            Desktop dt = Desktop.getDesktop();
            dt.open(file);
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }

    private void funCalculateTotalAmount()
    {
        try
        {
            double totalAmount = 0.00, dblDecorationItemAmount = 0.00;           
            for (int row = 0; row < tblProductDetails.getRowCount(); row++)
            {
                if (tblProductDetails.getValueAt(row, 3).toString().equalsIgnoreCase("Unit") && tblProductDetails.getValueAt(row, 1).toString().length() == 6)//unit or price(62)
                {
                    intDecorationItemRow = row;
                }
                else
                {
                    totalAmount += Double.parseDouble(tblProductDetails.getValueAt(row, 5).toString());//amt
                }
            }

            txtTotalAmount.setText(decimalFormatFor2DecPoint.format(Math.rint(totalAmount)));

        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }

    private void funCalculateDecorationItemAmount()
    {
        Double dblDecorationItemAmount = Double.parseDouble(txtDecorationItemPrice.getText()) - Double.parseDouble(txtTotalAmount.getText());
        if (intDecorationItemRow != -1)
        {
            tblProductDetails.setValueAt(decimalFormatFor2DecPoint.format(Math.rint(dblDecorationItemAmount)), intDecorationItemRow, 5);
        }
    }
}
