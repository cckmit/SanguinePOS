package com.POSTransaction.view;

import com.POSGlobal.controller.clsGlobalVarClass;
import com.POSGlobal.controller.clsUtility;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class panelShowKOTs extends javax.swing.JPanel
{

    frmBillSettlement obj;
    DefaultTableModel dm;
    StringBuilder sb = new StringBuilder();
    private List<String> listSelectedKOTs;
    DefaultTableModel dmKOTs;
    clsUtility objUtility;

    public panelShowKOTs(Object ob)
    {

	initComponents();
	try
	{
	    obj = (frmBillSettlement) ob;
	    objUtility = new clsUtility();
	    funFillGridWithKOT();
	}
	catch (Exception e)
	{
	    e.printStackTrace();
	}
    }

    public void funFillGridWithKOT()
    {
	try
	{
	    listSelectedKOTs = new ArrayList<>();
	    dmKOTs = (DefaultTableModel) tblKOT.getModel();
	    dmKOTs.setRowCount(0);
	    String html = "<html><font color=black>";
	    String tempKOTNo = "";
	    String table = "";
	    String counter = "";
	    sb.setLength(0);
	    sb.append("select distinct(a.strKOTNo),ifnull(a.strTableNo,'') ,ifnull(b.strCounterName,'') "
		    + " from tblitemrtemp a left outer join tblcounterhd b on a.strCounterCode=b.strCounterCode "
		    + " where a.strPOSCode='" + clsGlobalVarClass.gPOSCode + "' "
		    + " and a.strNCKOTYN='N' "
		    + " order by a.strKOTNo;");
	    ResultSet rsKOTNo = clsGlobalVarClass.dbMysql.executeResultSet(sb.toString());

	    while (rsKOTNo.next())
	    {
		tempKOTNo = html + rsKOTNo.getString(1) + "</font></html>";
		table = html + rsKOTNo.getString(2) + "</font></html>";
		counter = html + rsKOTNo.getString(3) + "</font></html>";
		Object[] ob =
		{
		    tempKOTNo, table, counter
		};
		dmKOTs.addRow(ob);
	    }
	    rsKOTNo.close();
	    lblKOTs.setText("");

	    tblKOT.getColumnModel().getColumn(0).setPreferredWidth(200);
	    tblKOT.getColumnModel().getColumn(1).setPreferredWidth(100);
	    tblKOT.getColumnModel().getColumn(2).setPreferredWidth(175);

	    this.revalidate();
	    this.repaint();

	}
	catch (Exception e)
	{
	    objUtility.funWriteErrorLog(e);
	    e.printStackTrace();
	}
    }

    private void funTableRowClicked()
    {
	StringBuilder sbKOTs = new StringBuilder();
	try
	{
	    if (tblKOT.getRowCount() > 0)
	    {
		int row = tblKOT.getSelectedRow();
		String tempKOTNo = funRemoveHTMLTags(tblKOT.getValueAt(row, 0).toString());
		if (listSelectedKOTs.contains(tempKOTNo))
		{
		    listSelectedKOTs.remove(tempKOTNo);
		    String html = "<html><font color=black>";
		    tempKOTNo = html + tempKOTNo + "</font></html>";
		    tblKOT.setValueAt(tempKOTNo, row, 0);
		}
		else
		{
		    listSelectedKOTs.add(tempKOTNo);
		    String html = "<html><font color=red  >";// Added two spaces after red to match length of black
		    tempKOTNo = html + tempKOTNo + "</font></html>";
		    tblKOT.setValueAt(tempKOTNo, row, 0);
		}
	    }
	    sbKOTs.setLength(0);
	    for (int cnt = 0; cnt < listSelectedKOTs.size(); cnt++)
	    {
		if (cnt == 0)
		{
		    sbKOTs.append(listSelectedKOTs.get(cnt).toString());
		}
		else
		{
		    sbKOTs.append(", ");
		    sbKOTs.append(listSelectedKOTs.get(cnt).toString());
		}
	    }
	    lblKOTs.setText(sbKOTs.toString());

	}
	catch (Exception e)
	{
	    objUtility.funWriteErrorLog(e);
	    e.printStackTrace();
	}
	repaint();
	revalidate();
    }

    private String funRemoveHTMLTags(String text)
    {
	//<html><font color=red  >KT0033750</font></html>
	StringBuilder sb = new StringBuilder(text);
	return sb.substring(24, 33).toString();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblKOT = new javax.swing.JTable();
        btnClose = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnMakeBill = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lblKOTs = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(490, 603));
        setOpaque(false);
        setLayout(null);

        jScrollPane1.setAutoscrolls(true);

        tblKOT.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        tblKOT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Open KOTs", "Table", "Counter"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tblKOT.setRowHeight(25);
        tblKOT.getTableHeader().setReorderingAllowed(false);
        tblKOT.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                tblKOTMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKOT);
        if (tblKOT.getColumnModel().getColumnCount() > 0)
        {
            tblKOT.getColumnModel().getColumn(0).setResizable(false);
            tblKOT.getColumnModel().getColumn(1).setResizable(false);
            tblKOT.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 490, 430);

        btnClose.setFont(new java.awt.Font("Trebuchet MS", 1, 13)); // NOI18N
        btnClose.setForeground(new java.awt.Color(255, 255, 255));
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtnLong1.png"))); // NOI18N
        btnClose.setText("BACK");
        btnClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnClose.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtnLong2.png"))); // NOI18N
        btnClose.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btnCloseMouseClicked(evt);
            }
        });
        add(btnClose);
        btnClose.setBounds(308, 503, 111, 41);

        btnRefresh.setFont(new java.awt.Font("Trebuchet MS", 1, 13)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtnLong1.png"))); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.setToolTipText("Refresh Form");
        btnRefresh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRefresh.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtnLong2.png"))); // NOI18N
        btnRefresh.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btnRefreshMouseClicked(evt);
            }
        });
        add(btnRefresh);
        btnRefresh.setBounds(159, 503, 111, 41);

        btnMakeBill.setFont(new java.awt.Font("Trebuchet MS", 1, 13)); // NOI18N
        btnMakeBill.setForeground(new java.awt.Color(255, 255, 255));
        btnMakeBill.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtnLong1.png"))); // NOI18N
        btnMakeBill.setText("Make Bill");
        btnMakeBill.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMakeBill.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSTransaction/images/imgCommonBtnLong2.png"))); // NOI18N
        btnMakeBill.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btnMakeBillMouseClicked(evt);
            }
        });
        add(btnMakeBill);
        btnMakeBill.setBounds(10, 503, 111, 41);

        lblKOTs.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jScrollPane2.setViewportView(lblKOTs);

        add(jScrollPane2);
        jScrollPane2.setBounds(0, 433, 490, 64);
    }// </editor-fold>//GEN-END:initComponents

    private void tblKOTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKOTMouseClicked
	funTableRowClicked();
    }//GEN-LAST:event_tblKOTMouseClicked

    private void btnCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseClicked
	// TODO add your handling code here:
	obj.funCloseForm();
    }//GEN-LAST:event_btnCloseMouseClicked

    private void btnRefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRefreshMouseClicked
	// TODO add your handling code here:
	funFillGridWithKOT();
    }//GEN-LAST:event_btnRefreshMouseClicked

    private void btnMakeBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMakeBillMouseClicked
	// TODO add your handling code here:
	if (listSelectedKOTs.size() > 0)
	{
	    this.setVisible(false);
	    obj.funSetBillFromKOTS(listSelectedKOTs);
	    obj.showPanel();
	}
	else
	{
	    JOptionPane.showMessageDialog(null, "Please Select KOT");
	}
    }//GEN-LAST:event_btnMakeBillMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnMakeBill;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblKOTs;
    private javax.swing.JTable tblKOT;
    // End of variables declaration//GEN-END:variables
}
