/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.POSMaster.view;

import com.POSGlobal.controller.clsGlobalVarClass;
import com.POSGlobal.controller.clsUtility;
import com.POSGlobal.view.frmNumericKeyboard;
import java.awt.HeadlessException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.LookAndFeel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Duce
 */




public class frmBulkItemPriceChange extends javax.swing.JFrame {

    clsUtility objUtility = new clsUtility();
    private JTable tblPriceDtl;
    /**
     * This method is used to initialize object
     */
    public frmBulkItemPriceChange() 
    {
        
    }
    /**
     * This method is used to initialize object
     * @param tblPriceDtl 
     */
    public frmBulkItemPriceChange(JTable tblPriceDtl) 
    {
        
        this.tblPriceDtl=tblPriceDtl;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        incrDecrComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        valuePercentageComboBox = new javax.swing.JComboBox();
        valueTextField = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Change Item Price");
        setAlwaysOnTop(true);
        setBounds(new java.awt.Rectangle(340, 285, 400, 200));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setName("Change Item Price"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        incrDecrComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--select--","Increment", "Decrement" }));
        incrDecrComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incrDecrComboBoxActionPerformed(evt);
            }
        });
        incrDecrComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                incrDecrComboBoxKeyPressed(evt);
            }
        });

        jLabel1.setText("   By");

        valuePercentageComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--select--","Value", "Percentage" }));
        valuePercentageComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valuePercentageComboBoxActionPerformed(evt);
            }
        });
        valuePercentageComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                valuePercentageComboBoxKeyPressed(evt);
            }
        });
        valuePercentageComboBox.setSelectedItem("--select--");

        valueTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        valueTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                valueTextFieldMouseClicked(evt);
            }
        });
        valueTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueTextFieldActionPerformed(evt);
            }
        });
        valueTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                valueTextFieldKeyPressed(evt);
            }
        });

        jButton3.setText("Ok");
        jButton3.setToolTipText("Change Price");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Cancel");
        jButton4.setToolTipText("Cancel Change Price");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(incrDecrComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(valuePercentageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(valueTextField)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(valueTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(valuePercentageComboBox, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(incrDecrComboBox))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void incrDecrComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incrDecrComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_incrDecrComboBoxActionPerformed

    private void valueTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valueTextFieldActionPerformed

    private void valuePercentageComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valuePercentageComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valuePercentageComboBoxActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        dispose();
        clsGlobalVarClass.hmActiveForms.remove("frmBulkItemPriceChange");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.out.println("rows="+this.tblPriceDtl.getRowCount()+"\t cols"+this.tblPriceDtl.getColumnCount());
        if(incrDecrComboBox.getSelectedIndex()>0)
        {
            if(valuePercentageComboBox.getSelectedIndex()>0)
            {
                if(!valueTextField.getText().isEmpty())
                {
                    System.out.println("combo1="+incrDecrComboBox.getSelectedItem()+"\tcombo2="+valuePercentageComboBox.getSelectedItem()+"\t text="+valueTextField.getText());
                    
                    if(incrDecrComboBox.getSelectedIndex()==1)//increament
                    {
                        if(valuePercentageComboBox.getSelectedIndex()==1)//value
                        {
                                                                                    
                            for(int i=0;i<tblPriceDtl.getRowCount();i++)
                            {
                                  for(int j=2;j<=8;j++)
                                  {
                                     double oldValue=Double.parseDouble(String.valueOf(tblPriceDtl.getValueAt(i, j)));
                                     double newValue=oldValue+Double.parseDouble(valueTextField.getText());//increament by value
                                     
                                     newValue=Math.round(newValue);
                                     tblPriceDtl.setValueAt(newValue, i, j);
                                  }
                            }
                        }
                        if(valuePercentageComboBox.getSelectedIndex()==2)//percentage
                        {
                            for(int i=0;i<tblPriceDtl.getRowCount();i++)
                            {
                                  for(int j=2;j<=8;j++)
                                  {
                 
                                     double oldValue=Double.parseDouble(String.valueOf(tblPriceDtl.getValueAt(i, j)));
                                     double newValue=(Double.parseDouble(valueTextField.getText())/100)*oldValue;//increament by percentage
                                     
                                     newValue=oldValue+newValue;
                                     newValue=Math.round(newValue);
                                     tblPriceDtl.setValueAt(newValue, i, j);
                                  }
                            }
                        }
                    }
                    else if(incrDecrComboBox.getSelectedIndex()==2)//decreament
                    {
                        if(valuePercentageComboBox.getSelectedIndex()==1)//value
                        {
                                                                                    
                            for(int i=0;i<tblPriceDtl.getRowCount();i++)
                            {
                                  for(int j=2;j<=8;j++)
                                  {
                                      
                                     double oldValue=Double.parseDouble(String.valueOf(tblPriceDtl.getValueAt(i, j)));
                                     double newValue=oldValue-Double.parseDouble(valueTextField.getText());//decreament by value
                                     
                                     newValue=Math.round(newValue);
                                     tblPriceDtl.setValueAt(newValue, i, j);
                                  }
                            }
                        }
                        if(valuePercentageComboBox.getSelectedIndex()==2)//percentage
                        {
                            for(int i=0;i<tblPriceDtl.getRowCount();i++)
                            {
                                  for(int j=2;j<=8;j++)
                                  {
                                     double oldValue=Double.parseDouble(String.valueOf(tblPriceDtl.getValueAt(i, j)));
                                     double newValue=(Double.parseDouble(valueTextField.getText())/100)*oldValue;//decreament by percentage
                                     
                                     newValue=oldValue-newValue;
                                     
                                     
                                     newValue=Math.round(newValue);
                                     tblPriceDtl.setValueAt(newValue, i, j);
                                  }
                            }
                        }
                    }
                     
                    dispose();
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Please enter valid data.", "Invalid Data", 1);
                }
            }
            else
            {
                 JOptionPane.showMessageDialog(null, "Please select value/percentage", "Invalid Data", 1);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select Increament/Decreament", "Invalid Data", 1);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void incrDecrComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_incrDecrComboBoxKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            valuePercentageComboBox.requestFocus();
        }
    }//GEN-LAST:event_incrDecrComboBoxKeyPressed

    private void valuePercentageComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valuePercentageComboBoxKeyPressed
        // TODO add your handling code here:
         if(evt.getKeyCode()==10)
        {
            valueTextField.requestFocus();
        }
    }//GEN-LAST:event_valuePercentageComboBoxKeyPressed

    private void valueTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valueTextFieldKeyPressed
        // TODO add your handling code here:
         if(evt.getKeyCode()==10)
        {
            jButton3.requestFocus();
        }
    }//GEN-LAST:event_valueTextFieldKeyPressed

    private void valueTextFieldMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_valueTextFieldMouseClicked
    {//GEN-HEADEREND:event_valueTextFieldMouseClicked
        try
        {
            if (valueTextField.getText().length() == 0)
            {
                new frmNumericKeyboard(this, true, "","Double", "Please Enter "+valuePercentageComboBox.getSelectedItem().toString()+". ").setVisible(true);
                valueTextField.setText(clsGlobalVarClass.gNumerickeyboardValue);
            }
            else
            {
                new frmNumericKeyboard(this, true, valueTextField.getText(), "Double", "Please Enter "+valuePercentageComboBox.getSelectedItem().toString()+". ").setVisible(true);
                valueTextField.setText(clsGlobalVarClass.gNumerickeyboardValue);
            }

        }
        catch (Exception e)
        {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_valueTextFieldMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        clsGlobalVarClass.hmActiveForms.remove("frmBulkItemPriceChange");
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        clsGlobalVarClass.hmActiveForms.remove("frmBulkItemPriceChange");
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
       try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmBulkItemPriceChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmBulkItemPriceChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmBulkItemPriceChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmBulkItemPriceChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmBulkItemPriceChange().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox incrDecrComboBox;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox valuePercentageComboBox;
    private javax.swing.JTextField valueTextField;
    // End of variables declaration//GEN-END:variables
}
