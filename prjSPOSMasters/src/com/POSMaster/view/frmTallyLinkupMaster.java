package com.POSMaster.view;



import com.POSGlobal.controller.clsGlobalVarClass;
import com.POSGlobal.controller.clsUtility;
import com.POSGlobal.view.frmOkPopUp;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

public class frmTallyLinkupMaster extends javax.swing.JFrame
{

    private String userCode;
    private StringBuilder sqlBuilder = null;
    private Map<String, String> mapPOSNameCode;
    clsUtility objUtility = new clsUtility();
    
    /**
     * This method is used to initialize frmGroupMaster
     */
    public frmTallyLinkupMaster()
    {
        initComponents();
        funSetShortCutKeys();
        try
        {
            Timer timer = new Timer(500, new ActionListener()
            {
                @Override
                public void actionPerformed(ActionEvent e)
                {
                    java.util.Date date1 = new java.util.Date();
                    String newstr = String.format("%tr", date1);
                    String dateAndTime = clsGlobalVarClass.gPOSDateToDisplay + " " + newstr;
                    lblDate.setText(dateAndTime);
                }
            });
            timer.setRepeats(true);
            timer.setCoalesce(true);
            timer.setInitialDelay(0);
            timer.start();

            userCode = clsGlobalVarClass.gUserCode;
            lblUserCode.setText(clsGlobalVarClass.gUserCode);
            lblPosName.setText(clsGlobalVarClass.gPOSName);
            lblDate.setText(clsGlobalVarClass.gPOSDateToDisplay);
            lblModuleName.setText(clsGlobalVarClass.gSelectedModule);

            sqlBuilder = new StringBuilder();
            mapPOSNameCode = new HashMap<String, String>();

            //fill pos combo box
            //funFillPOSComboBox();
            funFillTables();
        }
        catch (Exception e)
        {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }

    private void funSetShortCutKeys()
    {
        btnCancel.setMnemonic('c');
        btnSave.setMnemonic('s');
        btnReset.setMnemonic('r');
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        panelHeader = new javax.swing.JPanel();
        lblProductName = new javax.swing.JLabel();
        lblModuleName = new javax.swing.JLabel();
        lblformName = new javax.swing.JLabel();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        lblPosName = new javax.swing.JLabel();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        lblUserCode = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblHOSign = new javax.swing.JLabel();
        panelLayout = new JPanel() {  
            public void paintComponent(Graphics g) {  
                Image img = Toolkit.getDefaultToolkit().getImage(  
                    getClass().getResource("/com/POSMaster/images/imgBGJPOS.png"));  
                g.drawImage(img, 0, 0, this.getWidth(), this.getHeight(), this);  
            }  
        };  ;
        panelBody = new javax.swing.JPanel();
        lblFormName = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        tabbedPane = new javax.swing.JTabbedPane();
        panelPOS = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPOSLinkUp = new javax.swing.JTable();
        panelSubGroup = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSubGroupLinkUp = new javax.swing.JTable();
        panelTax = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblTaxLinkUp = new javax.swing.JTable();
        panelSettlement = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblSettlementLinkUp = new javax.swing.JTable();
        panelCustomer = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomerLinkUp = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setExtendedState(MAXIMIZED_BOTH);
        setMinimumSize(new java.awt.Dimension(800, 600));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosed(java.awt.event.WindowEvent evt)
            {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        panelHeader.setBackground(new java.awt.Color(69, 164, 238));
        panelHeader.setLayout(new javax.swing.BoxLayout(panelHeader, javax.swing.BoxLayout.LINE_AXIS));

        lblProductName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblProductName.setForeground(new java.awt.Color(255, 255, 255));
        lblProductName.setText("SPOS -");
        panelHeader.add(lblProductName);

        lblModuleName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblModuleName.setForeground(new java.awt.Color(255, 255, 255));
        panelHeader.add(lblModuleName);

        lblformName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblformName.setForeground(new java.awt.Color(255, 255, 255));
        lblformName.setText("-Tally LinkUp ");
        panelHeader.add(lblformName);
        panelHeader.add(filler4);
        panelHeader.add(filler5);

        lblPosName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPosName.setForeground(new java.awt.Color(255, 255, 255));
        lblPosName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPosName.setMaximumSize(new java.awt.Dimension(321, 30));
        lblPosName.setMinimumSize(new java.awt.Dimension(321, 30));
        lblPosName.setPreferredSize(new java.awt.Dimension(321, 30));
        panelHeader.add(lblPosName);
        panelHeader.add(filler6);

        lblUserCode.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblUserCode.setForeground(new java.awt.Color(255, 255, 255));
        lblUserCode.setMaximumSize(new java.awt.Dimension(90, 30));
        lblUserCode.setMinimumSize(new java.awt.Dimension(90, 30));
        lblUserCode.setPreferredSize(new java.awt.Dimension(90, 30));
        panelHeader.add(lblUserCode);

        lblDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 255, 255));
        lblDate.setMaximumSize(new java.awt.Dimension(192, 30));
        lblDate.setMinimumSize(new java.awt.Dimension(192, 30));
        lblDate.setPreferredSize(new java.awt.Dimension(192, 30));
        panelHeader.add(lblDate);

        lblHOSign.setMaximumSize(new java.awt.Dimension(34, 30));
        lblHOSign.setMinimumSize(new java.awt.Dimension(34, 30));
        lblHOSign.setPreferredSize(new java.awt.Dimension(34, 30));
        panelHeader.add(lblHOSign);

        getContentPane().add(panelHeader, java.awt.BorderLayout.PAGE_START);

        panelLayout.setBackground(new java.awt.Color(255, 255, 255));
        panelLayout.setLayout(new java.awt.GridBagLayout());

        panelBody.setBackground(new java.awt.Color(255, 255, 255));
        panelBody.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        panelBody.setMinimumSize(new java.awt.Dimension(800, 570));
        panelBody.setOpaque(false);

        lblFormName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblFormName.setForeground(new java.awt.Color(14, 7, 7));
        lblFormName.setText("Tally LinkUp ");

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSMaster/images/imgCmnBtn1.png"))); // NOI18N
        btnSave.setText("SAVE");
        btnSave.setToolTipText("Save Group Master");
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSMaster/images/imgCmnBtn2.png"))); // NOI18N
        btnSave.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btnSaveMouseClicked(evt);
            }
        });
        btnSave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSaveActionPerformed(evt);
            }
        });
        btnSave.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btnSaveKeyPressed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSMaster/images/imgCmnBtn1.png"))); // NOI18N
        btnReset.setText("RESET");
        btnReset.setToolTipText("Reset All Fields");
        btnReset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReset.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSMaster/images/imgCmnBtn2.png"))); // NOI18N
        btnReset.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btnResetMouseClicked(evt);
            }
        });
        btnReset.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnResetActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSMaster/images/imgCmnBtn1.png"))); // NOI18N
        btnCancel.setText("CLOSE");
        btnCancel.setToolTipText("Close Group Master");
        btnCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancel.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSMaster/images/imgCmnBtn2.png"))); // NOI18N
        btnCancel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                btnCancelMouseClicked(evt);
            }
        });
        btnCancel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCancelActionPerformed(evt);
            }
        });

        tblPOSLinkUp.setAutoCreateRowSorter(true);
        tblPOSLinkUp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "POS Code", "POS Name", "POS Tally Alias Code", "Discount Tally Alias Code", "Tip Tally Alias Code"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tblPOSLinkUp.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblPOSLinkUp);
        if (tblPOSLinkUp.getColumnModel().getColumnCount() > 0)
        {
            tblPOSLinkUp.getColumnModel().getColumn(0).setResizable(false);
            tblPOSLinkUp.getColumnModel().getColumn(0).setPreferredWidth(10);
            tblPOSLinkUp.getColumnModel().getColumn(1).setResizable(false);
            tblPOSLinkUp.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblPOSLinkUp.getColumnModel().getColumn(2).setResizable(false);
            tblPOSLinkUp.getColumnModel().getColumn(2).setPreferredWidth(20);
            tblPOSLinkUp.getColumnModel().getColumn(3).setResizable(false);
            tblPOSLinkUp.getColumnModel().getColumn(3).setPreferredWidth(30);
            tblPOSLinkUp.getColumnModel().getColumn(4).setResizable(false);
            tblPOSLinkUp.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        javax.swing.GroupLayout panelPOSLayout = new javax.swing.GroupLayout(panelPOS);
        panelPOS.setLayout(panelPOSLayout);
        panelPOSLayout.setHorizontalGroup(
            panelPOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
        );
        panelPOSLayout.setVerticalGroup(
            panelPOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
        );

        tabbedPane.addTab("POS", panelPOS);

        tblSubGroupLinkUp.setAutoCreateRowSorter(true);
        tblSubGroupLinkUp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Sub Group Code", "Sub Group Name", "Tally Alias Code"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tblSubGroupLinkUp.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tblSubGroupLinkUp);
        if (tblSubGroupLinkUp.getColumnModel().getColumnCount() > 0)
        {
            tblSubGroupLinkUp.getColumnModel().getColumn(0).setResizable(false);
            tblSubGroupLinkUp.getColumnModel().getColumn(0).setPreferredWidth(20);
            tblSubGroupLinkUp.getColumnModel().getColumn(1).setResizable(false);
            tblSubGroupLinkUp.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblSubGroupLinkUp.getColumnModel().getColumn(2).setResizable(false);
            tblSubGroupLinkUp.getColumnModel().getColumn(2).setPreferredWidth(20);
        }

        javax.swing.GroupLayout panelSubGroupLayout = new javax.swing.GroupLayout(panelSubGroup);
        panelSubGroup.setLayout(panelSubGroupLayout);
        panelSubGroupLayout.setHorizontalGroup(
            panelSubGroupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
        );
        panelSubGroupLayout.setVerticalGroup(
            panelSubGroupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
        );

        tabbedPane.addTab("Sub Group", panelSubGroup);

        tblTaxLinkUp.setAutoCreateRowSorter(true);
        tblTaxLinkUp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Tax Code", "Tax Name", "Tally Alias Code"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tblTaxLinkUp.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tblTaxLinkUp);
        if (tblTaxLinkUp.getColumnModel().getColumnCount() > 0)
        {
            tblTaxLinkUp.getColumnModel().getColumn(0).setResizable(false);
            tblTaxLinkUp.getColumnModel().getColumn(0).setPreferredWidth(20);
            tblTaxLinkUp.getColumnModel().getColumn(1).setResizable(false);
            tblTaxLinkUp.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblTaxLinkUp.getColumnModel().getColumn(2).setResizable(false);
            tblTaxLinkUp.getColumnModel().getColumn(2).setPreferredWidth(20);
        }

        javax.swing.GroupLayout panelTaxLayout = new javax.swing.GroupLayout(panelTax);
        panelTax.setLayout(panelTaxLayout);
        panelTaxLayout.setHorizontalGroup(
            panelTaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
        );
        panelTaxLayout.setVerticalGroup(
            panelTaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
        );

        tabbedPane.addTab("Tax", panelTax);

        tblSettlementLinkUp.setAutoCreateRowSorter(true);
        tblSettlementLinkUp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Settlement Code", "Settlement Name", "Tally Alias Code"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tblSettlementLinkUp.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tblSettlementLinkUp);
        if (tblSettlementLinkUp.getColumnModel().getColumnCount() > 0)
        {
            tblSettlementLinkUp.getColumnModel().getColumn(0).setResizable(false);
            tblSettlementLinkUp.getColumnModel().getColumn(0).setPreferredWidth(20);
            tblSettlementLinkUp.getColumnModel().getColumn(1).setResizable(false);
            tblSettlementLinkUp.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblSettlementLinkUp.getColumnModel().getColumn(2).setResizable(false);
            tblSettlementLinkUp.getColumnModel().getColumn(2).setPreferredWidth(20);
        }

        javax.swing.GroupLayout panelSettlementLayout = new javax.swing.GroupLayout(panelSettlement);
        panelSettlement.setLayout(panelSettlementLayout);
        panelSettlementLayout.setHorizontalGroup(
            panelSettlementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
        );
        panelSettlementLayout.setVerticalGroup(
            panelSettlementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
        );

        tabbedPane.addTab("Settlement", panelSettlement);

        tblCustomerLinkUp.setAutoCreateRowSorter(true);
        tblCustomerLinkUp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Customer Code", "Customer Name", "Tally Alias Code"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tblCustomerLinkUp.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblCustomerLinkUp);
        if (tblCustomerLinkUp.getColumnModel().getColumnCount() > 0)
        {
            tblCustomerLinkUp.getColumnModel().getColumn(0).setResizable(false);
            tblCustomerLinkUp.getColumnModel().getColumn(0).setPreferredWidth(20);
            tblCustomerLinkUp.getColumnModel().getColumn(1).setResizable(false);
            tblCustomerLinkUp.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblCustomerLinkUp.getColumnModel().getColumn(2).setResizable(false);
            tblCustomerLinkUp.getColumnModel().getColumn(2).setPreferredWidth(20);
        }

        javax.swing.GroupLayout panelCustomerLayout = new javax.swing.GroupLayout(panelCustomer);
        panelCustomer.setLayout(panelCustomerLayout);
        panelCustomerLayout.setHorizontalGroup(
            panelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
        );
        panelCustomerLayout.setVerticalGroup(
            panelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
        );

        tabbedPane.addTab("Customer", panelCustomer);

        javax.swing.GroupLayout panelBodyLayout = new javax.swing.GroupLayout(panelBody);
        panelBody.setLayout(panelBodyLayout);
        panelBodyLayout.setHorizontalGroup(
            panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBodyLayout.createSequentialGroup()
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBodyLayout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addComponent(lblFormName)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBodyLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(tabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        panelBodyLayout.setVerticalGroup(
            panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBodyLayout.createSequentialGroup()
                .addComponent(lblFormName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tabbedPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
        );

        panelLayout.add(panelBody, new java.awt.GridBagConstraints());

        getContentPane().add(panelLayout, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked

        if (btnSave.isEnabled())
        {
            funSaveButtonClicked();
        }
    }//GEN-LAST:event_btnSaveMouseClicked

    private void btnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseClicked

    }//GEN-LAST:event_btnResetMouseClicked

    private void btnCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseClicked
        // TODO add your handling code here:
        dispose();
        clsGlobalVarClass.hmActiveForms.remove("Tally Linkup Master");

    }//GEN-LAST:event_btnCancelMouseClicked

    private void btnSaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSaveKeyPressed

    }//GEN-LAST:event_btnSaveKeyPressed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed

    }//GEN-LAST:event_btnResetActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        dispose();
        clsGlobalVarClass.hmActiveForms.remove("Tally Linkup Master");
    }//GEN-LAST:event_btnCancelActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblFormName;
    private javax.swing.JLabel lblHOSign;
    private javax.swing.JLabel lblModuleName;
    private javax.swing.JLabel lblPosName;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblUserCode;
    private javax.swing.JLabel lblformName;
    private javax.swing.JPanel panelBody;
    private javax.swing.JPanel panelCustomer;
    private javax.swing.JPanel panelHeader;
    private javax.swing.JPanel panelLayout;
    private javax.swing.JPanel panelPOS;
    private javax.swing.JPanel panelSettlement;
    private javax.swing.JPanel panelSubGroup;
    private javax.swing.JPanel panelTax;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTable tblCustomerLinkUp;
    private javax.swing.JTable tblPOSLinkUp;
    private javax.swing.JTable tblSettlementLinkUp;
    private javax.swing.JTable tblSubGroupLinkUp;
    private javax.swing.JTable tblTaxLinkUp;
    // End of variables declaration//GEN-END:variables

    private void funFillTables()
    {
        //fill POS linkup tables
        funFillPOSLinkupTable();
        //fill sub group linkup tables
        funFillSubGroupLinkupTable();
        //fill tax linkup tables
        funFillTaxLinkupTable();
        //fill tax linkup tables
        funFillSettlementLinkupTable();
        //fill customer linkup tables
        funFillCustomerLinkupTable();
    }

    private void funFillPOSLinkupTable()
    {
        try
        {            
            sqlBuilder.setLength(0);
            sqlBuilder.append("select a.strPosCode,a.strPosName "
                    + ",ifnull(b.strLinkupCode,'')strLinkupCode,ifnull(b.strLinkupName,'')strLinkupName,ifnull(b.strTallyAliasCode,'')strTallyAliasCode"
                    + ",b.strDiscTallyAliasCode,b.strTipTallyAliasCode "
                    + "from tblposmaster a  "
                    + "left outer join tbltallylinkup b on a.strPosCode=b.strLinkupCode  "
                    + "where a.strOperationalYN='Y' ");
                    
            ResultSet rsPOS = clsGlobalVarClass.dbMysql.executeResultSet(sqlBuilder.toString());
            DefaultTableModel defaultTableModel = (DefaultTableModel) tblPOSLinkUp.getModel();
            defaultTableModel.setRowCount(0);
            while (rsPOS.next())
            {
                //posCode,posName,tallyAliasCode,discAliasCode,tipAliaseCode
                Object[] row =
                {
                    rsPOS.getString(1), rsPOS.getString(2), rsPOS.getString(5), rsPOS.getString(6), rsPOS.getString(7)
                };
                defaultTableModel.addRow(row);
            }
            rsPOS.close();
            tblPOSLinkUp.setModel(defaultTableModel);
            tblPOSLinkUp.setRowHeight(25);
        }
        catch (Exception e)
        {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }

    private void funFillSubGroupLinkupTable()
    {
        try
        {            
            sqlBuilder.setLength(0);
            sqlBuilder.append("select a.strSubGroupCode,a.strSubGroupName "
                    + ",ifnull(b.strLinkupCode,'')strLinkupCode,ifnull(b.strLinkupName,'')strLinkupName,ifnull(b.strTallyAliasCode,'')strTallyAliasCode "
                    + "from tblsubgrouphd a  "
                    + "left outer join tbltallylinkup b on a.strSubGroupCode=b.strLinkupCode  ");                    
            ResultSet rsSubGroup = clsGlobalVarClass.dbMysql.executeResultSet(sqlBuilder.toString());
            DefaultTableModel defaultTableModel = (DefaultTableModel) tblSubGroupLinkUp.getModel();
            defaultTableModel.setRowCount(0);
            while (rsSubGroup.next())
            {
                //ode,Name,tallyAliasCode
                Object[] row =
                {
                    rsSubGroup.getString(1), rsSubGroup.getString(2), rsSubGroup.getString(5)
                };
                defaultTableModel.addRow(row);
            }
            rsSubGroup.close();
            tblSubGroupLinkUp.setModel(defaultTableModel);
            tblSubGroupLinkUp.setRowHeight(25);
        }
        catch (Exception e)
        {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }

    private void funFillTaxLinkupTable()
    {
        try
        {           
            sqlBuilder.setLength(0);
            sqlBuilder.append("select a.strTaxCode,a.strTaxDesc "
                    + ",ifnull(b.strLinkupCode,'')strLinkupCode,ifnull(b.strLinkupName,'')strLinkupName,ifnull(b.strTallyAliasCode,'')strTallyAliasCode "
                    + "from tbltaxhd a  "
                    + "left outer join tbltallylinkup b on a.strTaxCode=b.strLinkupCode  ");
            ResultSet rsTax = clsGlobalVarClass.dbMysql.executeResultSet(sqlBuilder.toString());
            DefaultTableModel defaultTableModel = (DefaultTableModel) tblTaxLinkUp.getModel();
            defaultTableModel.setRowCount(0);
            while (rsTax.next())
            {
                //ode,Name,tallyAliasCode
                Object[] row =
                {
                    rsTax.getString(1), rsTax.getString(2), rsTax.getString(5)
                };
                defaultTableModel.addRow(row);
            }
            rsTax.close();
            tblTaxLinkUp.setModel(defaultTableModel);
            tblTaxLinkUp.setRowHeight(25);
        }
        catch (Exception e)
        {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }

    private void funFillSettlementLinkupTable()
    {
        try
        {
            
            sqlBuilder.setLength(0);
            sqlBuilder.append("select a.strSettelmentCode,a.strSettelmentDesc "
                    + ",ifnull(b.strLinkupCode,'')strLinkupCode,ifnull(b.strLinkupName,'')strLinkupName,ifnull(b.strTallyAliasCode,'')strTallyAliasCode "
                    + "from tblsettelmenthd a  "
                    + "left outer join tbltallylinkup b on a.strSettelmentCode=b.strLinkupCode   ");
            ResultSet rsSettlement = clsGlobalVarClass.dbMysql.executeResultSet(sqlBuilder.toString());
            DefaultTableModel defaultTableModel = (DefaultTableModel) tblSettlementLinkUp.getModel();
            defaultTableModel.setRowCount(0);
            while (rsSettlement.next())
            {
                //ode,Name,tallyAliasCode
                Object[] row =
                {
                    rsSettlement.getString(1), rsSettlement.getString(2), rsSettlement.getString(5)
                };
                defaultTableModel.addRow(row);
            }
            rsSettlement.close();
            tblSettlementLinkUp.setModel(defaultTableModel);
            tblSettlementLinkUp.setRowHeight(25);
        }
        catch (Exception e)
        {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }

    private void funFillCustomerLinkupTable()
    {
        try
        {
            
            sqlBuilder.setLength(0);
            sqlBuilder.append("select a.strCustomerCode,a.strCustomerName "
                    + ",ifnull(b.strLinkupCode,'')strLinkupCode,ifnull(b.strLinkupName,'')strLinkupName,ifnull(b.strTallyAliasCode,'')strTallyAliasCode "
                    + "from tblcustomermaster a  "
                    + "left outer join tbltallylinkup b on a.strCustomerCode=b.strLinkupCode   ");
            ResultSet rsSettlement = clsGlobalVarClass.dbMysql.executeResultSet(sqlBuilder.toString());
            DefaultTableModel defaultTableModel = (DefaultTableModel) tblCustomerLinkUp.getModel();
            defaultTableModel.setRowCount(0);
            while (rsSettlement.next())
            {
                //ode,Name,tallyAliasCode
                Object[] row =
                {
                    rsSettlement.getString(1), rsSettlement.getString(2), rsSettlement.getString(5)
                };
                defaultTableModel.addRow(row);
            }
            rsSettlement.close();
            tblCustomerLinkUp.setModel(defaultTableModel);
            tblCustomerLinkUp.setRowHeight(25);
        }
        catch (Exception e)
        {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }

    private void funSaveButtonClicked()
    {
        try
        {
            String posCode = "All";

            sqlBuilder.setLength(0);
            sqlBuilder.append("insert into tbltallylinkup values ");
            //pos 
            for (int row = 0; row < tblPOSLinkUp.getRowCount(); row++)
            {
                if (row == 0)
                {
                    sqlBuilder.append("('" + posCode + "','" + tblPOSLinkUp.getValueAt(row, 0).toString() + "','" + tblPOSLinkUp.getValueAt(row, 1).toString() + "'"
                            + ",'" + tblPOSLinkUp.getValueAt(row, 2).toString() + "','" + tblPOSLinkUp.getValueAt(row, 3).toString() + "','" + tblPOSLinkUp.getValueAt(row, 4).toString() + "','" + clsGlobalVarClass.gUserCode + "','" + clsGlobalVarClass.gUserCode + "','" + clsGlobalVarClass.getCurrentDateTime() + "','" + clsGlobalVarClass.getCurrentDateTime() + "','N','" + clsGlobalVarClass.gClientCode + "')");
                }
                else
                {
                    sqlBuilder.append(",('" + posCode + "','" + tblPOSLinkUp.getValueAt(row, 0).toString() + "','" + tblPOSLinkUp.getValueAt(row, 1).toString() + "'"
                            + ",'" + tblPOSLinkUp.getValueAt(row, 2).toString() + "','" + tblPOSLinkUp.getValueAt(row, 3).toString() + "','" + tblPOSLinkUp.getValueAt(row, 4).toString() + "','" + clsGlobalVarClass.gUserCode + "','" + clsGlobalVarClass.gUserCode + "','" + clsGlobalVarClass.getCurrentDateTime() + "','" + clsGlobalVarClass.getCurrentDateTime() + "','N','" + clsGlobalVarClass.gClientCode + "')");
                }
            }
            //subgroup 
            for (int row = 0; row < tblSubGroupLinkUp.getRowCount(); row++)
            {

                sqlBuilder.append(",('" + posCode + "','" + tblSubGroupLinkUp.getValueAt(row, 0).toString() + "','" + tblSubGroupLinkUp.getValueAt(row, 1).toString() + "'"
                        + ",'" + tblSubGroupLinkUp.getValueAt(row, 2).toString() + "','','','" + clsGlobalVarClass.gUserCode + "','" + clsGlobalVarClass.gUserCode + "','" + clsGlobalVarClass.getCurrentDateTime() + "','" + clsGlobalVarClass.getCurrentDateTime() + "','N','" + clsGlobalVarClass.gClientCode + "')");

            }
            //tax 
            for (int row = 0; row < tblTaxLinkUp.getRowCount(); row++)
            {

                sqlBuilder.append(",('" + posCode + "','" + tblTaxLinkUp.getValueAt(row, 0).toString() + "','" + tblTaxLinkUp.getValueAt(row, 1).toString() + "'"
                        + ",'" + tblTaxLinkUp.getValueAt(row, 2).toString() + "','','','" + clsGlobalVarClass.gUserCode + "','" + clsGlobalVarClass.gUserCode + "','" + clsGlobalVarClass.getCurrentDateTime() + "','" + clsGlobalVarClass.getCurrentDateTime() + "','N','" + clsGlobalVarClass.gClientCode + "')");

            }
            //settlement 
            for (int row = 0; row < tblSettlementLinkUp.getRowCount(); row++)
            {

                sqlBuilder.append(",('" + posCode + "','" + tblSettlementLinkUp.getValueAt(row, 0).toString() + "','" + tblSettlementLinkUp.getValueAt(row, 1).toString() + "'"
                        + ",'" + tblSettlementLinkUp.getValueAt(row, 2).toString() + "','','','" + clsGlobalVarClass.gUserCode + "','" + clsGlobalVarClass.gUserCode + "','" + clsGlobalVarClass.getCurrentDateTime() + "','" + clsGlobalVarClass.getCurrentDateTime() + "','N','" + clsGlobalVarClass.gClientCode + "')");

            }
            //customer 
            for (int row = 0; row < tblCustomerLinkUp.getRowCount(); row++)
            {

                sqlBuilder.append(",('" + posCode + "','" + tblCustomerLinkUp.getValueAt(row, 0).toString() + "','" + tblCustomerLinkUp.getValueAt(row, 1).toString() + "'"
                        + ",'" + tblCustomerLinkUp.getValueAt(row, 2).toString() + "','','','" + clsGlobalVarClass.gUserCode + "','" + clsGlobalVarClass.gUserCode + "','" + clsGlobalVarClass.getCurrentDateTime() + "','" + clsGlobalVarClass.getCurrentDateTime() + "','N','" + clsGlobalVarClass.gClientCode + "')");

            }
            //System.out.println("insert query->" + sqlBuilder);
            clsGlobalVarClass.dbMysql.execute("delete from tbltallylinkup where strPOSCode='" + posCode + "' and strClientCode='" + clsGlobalVarClass.gClientCode + "' ");//delete old records
            clsGlobalVarClass.dbMysql.execute(sqlBuilder.toString());
            new frmOkPopUp(this, "Entry Added Successfully", "Successfull", 3).setVisible(true);
        }
        catch (Exception e)
        {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }

}
