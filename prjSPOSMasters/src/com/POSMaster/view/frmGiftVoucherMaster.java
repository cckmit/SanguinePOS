/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.POSMaster.view;

import com.POSGlobal.controller.clsFixedSizeText;
import com.POSGlobal.controller.clsGlobalVarClass;
import com.POSGlobal.controller.clsTextFieldOnlyNumber;
import com.POSGlobal.controller.clsTextFieldOnlyNumber.JNumberFieldFilter;
import com.POSGlobal.controller.clsUtility;
import com.POSGlobal.view.frmAlfaNumericKeyBoard;
import com.POSGlobal.view.frmNumericKeyboard;
import com.POSGlobal.view.frmOkPopUp;
import com.POSGlobal.view.frmSearchFormDialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JPanel;
import com.POSGlobal.controller.clsUtility;

/**
 *
 * @author sss11
 */
public class frmGiftVoucherMaster extends javax.swing.JFrame {

    private String giftVoucherCode, giftVoucherName, giftVoucherSeriesCode, sql, giftVoucherValueType, validDateFrom, validDateTo;
    private int giftVoucherStartNo, giftVoucherEndNo, totalGiftVouchers;
    private double giftVoucherValue;
    private boolean flag;
    private String dteFromDate, dteToDate;
    clsUtility objUtility = new clsUtility();

    /**
     * This method is used to initialize frmGiftVoucherMaster
     */
    public frmGiftVoucherMaster() {
        initComponents();
        lblModuleName.setText(clsGlobalVarClass.gSelectedModule);
        lblUserCode.setText(clsGlobalVarClass.gUserCode);
        lblPosName.setText(clsGlobalVarClass.gPOSName);
        lblDate.setText(clsGlobalVarClass.gPOSDateToDisplay);
        funSetShortCutKeys();
        try {
            Timer timer = new Timer(500, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    Date date1 = new Date();
                    String newstr = String.format("%tr", date1);
                    String dateAndTime = clsGlobalVarClass.gPOSDateToDisplay + " " + newstr;
                    lblDate.setText(dateAndTime);

                }
            });
            timer.setRepeats(true);
            timer.setCoalesce(true);
            timer.setInitialDelay(0);
            timer.start();
            
            java.util.Date date = new SimpleDateFormat("dd-MM-yyyy").parse(clsGlobalVarClass.gPOSDateToDisplay);
            dtChFromDate.setDate(date);
            dtChToDate.setDate(date);
            txtGiftVoucherName.setDocument(new clsFixedSizeText(10));//to set Max length of gift voucher name to 10 characher only..
            txtGiftVoucherStartNo.setDocument(new clsTextFieldOnlyNumber(20, 2).new JNumberFieldFilter());// to set start no field with number only and not allow any other special charaters
            txtGiftVoucherEndNo.setDocument(new clsTextFieldOnlyNumber(20, 2).new JNumberFieldFilter());// to set End No field with number only and not allow any other special charaters
            txtGiftVoucherAmount.setDocument(new clsTextFieldOnlyNumber(6, 3).new JNumberFieldFilter());//to set Voucher amount  field with number only and  allow decimal value and also disable other special charaters ; does not allow negative value
        } catch (Exception e) {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }

    private void funSetShortCutKeys() {
        btnCancel.setMnemonic('c');
        btnNew.setMnemonic('s');
        btnReset.setMnemonic('r');

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelHeader = new javax.swing.JPanel();
        lblProductName = new javax.swing.JLabel();
        lblModuleName = new javax.swing.JLabel();
        lblformName = new javax.swing.JLabel();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        lblPosName = new javax.swing.JLabel();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        lblUserCode = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblHOSign = new javax.swing.JLabel();
        panelLayout = new JPanel() {  
            public void paintComponent(Graphics g) {  
                Image img = Toolkit.getDefaultToolkit().getImage(  
                    getClass().getResource("/com/POSMaster/images/imgBGJPOS.png"));  
                g.drawImage(img, 0, 0, this.getWidth(), this.getHeight(), this);  
            }  
        };  ;
        panelBody = new javax.swing.JPanel();
        lblFormName = new javax.swing.JLabel();
        lblCostCode = new javax.swing.JLabel();
        txtGiftVoucherCode = new javax.swing.JTextField();
        lblGroupName2 = new javax.swing.JLabel();
        txtGiftVoucherName = new javax.swing.JTextField();
        lblStart1 = new javax.swing.JLabel();
        txtGiftVoucherSeries = new javax.swing.JTextField();
        lblStart = new javax.swing.JLabel();
        txtGiftVoucherStartNo = new javax.swing.JTextField();
        lblEnd = new javax.swing.JLabel();
        txtGiftVoucherEndNo = new javax.swing.JTextField();
        lbTotalValue = new javax.swing.JLabel();
        txtTotalValue = new javax.swing.JTextField();
        lblGiftVoucherValue = new javax.swing.JLabel();
        cmbVoucherValue = new javax.swing.JComboBox();
        txtGiftVoucherAmount = new javax.swing.JTextField();
        lblStartDate = new javax.swing.JLabel();
        dtChFromDate = new com.toedter.calendar.JDateChooser();
        lblStartDate1 = new javax.swing.JLabel();
        dtChToDate = new com.toedter.calendar.JDateChooser();
        btnNew = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setExtendedState(MAXIMIZED_BOTH);
        setMinimumSize(new java.awt.Dimension(800, 600));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        panelHeader.setBackground(new java.awt.Color(69, 164, 238));
        panelHeader.setLayout(new javax.swing.BoxLayout(panelHeader, javax.swing.BoxLayout.LINE_AXIS));

        lblProductName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblProductName.setForeground(new java.awt.Color(255, 255, 255));
        lblProductName.setText("SPOS - ");
        panelHeader.add(lblProductName);

        lblModuleName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblModuleName.setForeground(new java.awt.Color(255, 255, 255));
        panelHeader.add(lblModuleName);

        lblformName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblformName.setForeground(new java.awt.Color(255, 255, 255));
        lblformName.setText("- Gift Voucher Master");
        panelHeader.add(lblformName);
        panelHeader.add(filler4);
        panelHeader.add(filler5);

        lblPosName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPosName.setForeground(new java.awt.Color(255, 255, 255));
        lblPosName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPosName.setMaximumSize(new java.awt.Dimension(321, 30));
        lblPosName.setMinimumSize(new java.awt.Dimension(321, 30));
        lblPosName.setPreferredSize(new java.awt.Dimension(321, 30));
        panelHeader.add(lblPosName);
        panelHeader.add(filler6);

        lblUserCode.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblUserCode.setForeground(new java.awt.Color(255, 255, 255));
        lblUserCode.setMaximumSize(new java.awt.Dimension(90, 30));
        lblUserCode.setMinimumSize(new java.awt.Dimension(90, 30));
        lblUserCode.setPreferredSize(new java.awt.Dimension(90, 30));
        panelHeader.add(lblUserCode);

        lblDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 255, 255));
        lblDate.setMaximumSize(new java.awt.Dimension(192, 30));
        lblDate.setMinimumSize(new java.awt.Dimension(192, 30));
        lblDate.setPreferredSize(new java.awt.Dimension(192, 30));
        panelHeader.add(lblDate);

        lblHOSign.setMaximumSize(new java.awt.Dimension(34, 30));
        lblHOSign.setMinimumSize(new java.awt.Dimension(34, 30));
        lblHOSign.setPreferredSize(new java.awt.Dimension(34, 30));
        panelHeader.add(lblHOSign);

        getContentPane().add(panelHeader, java.awt.BorderLayout.PAGE_START);

        panelLayout.setBackground(new java.awt.Color(255, 255, 255));
        panelLayout.setLayout(new java.awt.GridBagLayout());

        panelBody.setBackground(new java.awt.Color(255, 255, 255));
        panelBody.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        panelBody.setMinimumSize(new java.awt.Dimension(800, 570));
        panelBody.setOpaque(false);
        panelBody.setPreferredSize(new java.awt.Dimension(800, 570));

        lblFormName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblFormName.setForeground(new java.awt.Color(14, 7, 7));
        lblFormName.setText("Gift Voucher Master");

        lblCostCode.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCostCode.setText("Gift Voucher Code   :");

        txtGiftVoucherCode.setEditable(false);
        txtGiftVoucherCode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtGiftVoucherCodeMouseClicked(evt);
            }
        });
        txtGiftVoucherCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGiftVoucherCodeKeyPressed(evt);
            }
        });

        lblGroupName2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblGroupName2.setText("Gift Voucher Name  :");

        txtGiftVoucherName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtGiftVoucherNameMouseClicked(evt);
            }
        });
        txtGiftVoucherName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGiftVoucherNameKeyPressed(evt);
            }
        });

        lblStart1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblStart1.setText("Series Code :");

        txtGiftVoucherSeries.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtGiftVoucherSeriesMouseClicked(evt);
            }
        });
        txtGiftVoucherSeries.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGiftVoucherSeriesKeyPressed(evt);
            }
        });

        lblStart.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblStart.setText("Start No :");

        txtGiftVoucherStartNo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtGiftVoucherStartNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGiftVoucherStartNoFocusLost(evt);
            }
        });
        txtGiftVoucherStartNo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtGiftVoucherStartNoMouseClicked(evt);
            }
        });
        txtGiftVoucherStartNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGiftVoucherStartNoKeyPressed(evt);
            }
        });

        lblEnd.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblEnd.setText("End No :");

        txtGiftVoucherEndNo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtGiftVoucherEndNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGiftVoucherEndNoFocusLost(evt);
            }
        });
        txtGiftVoucherEndNo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtGiftVoucherEndNoMouseClicked(evt);
            }
        });
        txtGiftVoucherEndNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGiftVoucherEndNoKeyPressed(evt);
            }
        });

        lbTotalValue.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbTotalValue.setText("No Of Gift Vouchers :");

        txtTotalValue.setEnabled(false);
        txtTotalValue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTotalValueMouseClicked(evt);
            }
        });
        txtTotalValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTotalValueKeyPressed(evt);
            }
        });

        lblGiftVoucherValue.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblGiftVoucherValue.setText("Gift Voucher Value :");

        cmbVoucherValue.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Value", "Discount %" }));
        cmbVoucherValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbVoucherValueKeyPressed(evt);
            }
        });

        txtGiftVoucherAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtGiftVoucherAmount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtGiftVoucherAmountMouseClicked(evt);
            }
        });
        txtGiftVoucherAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGiftVoucherAmountKeyPressed(evt);
            }
        });

        lblStartDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblStartDate.setText("Valid From             :");

        dtChFromDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dtChFromDateKeyPressed(evt);
            }
        });

        lblStartDate1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblStartDate1.setText("Valid To        :");

        dtChToDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dtChToDateKeyPressed(evt);
            }
        });

        btnNew.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnNew.setForeground(new java.awt.Color(255, 255, 255));
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSMaster/images/imgCmnBtn1.png"))); // NOI18N
        btnNew.setText("SAVE");
        btnNew.setToolTipText("Save Gift Voucher Master");
        btnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSMaster/images/imgCmnBtn2.png"))); // NOI18N
        btnNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNewMouseClicked(evt);
            }
        });
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        btnNew.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnNewKeyPressed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSMaster/images/imgCmnBtn1.png"))); // NOI18N
        btnReset.setText("RESET");
        btnReset.setToolTipText("Reset All Fields");
        btnReset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReset.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSMaster/images/imgCmnBtn2.png"))); // NOI18N
        btnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResetMouseClicked(evt);
            }
        });
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSMaster/images/imgCmnBtn1.png"))); // NOI18N
        btnCancel.setText("CLOSE");
        btnCancel.setToolTipText("Close Gift Voucher Master");
        btnCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancel.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/POSMaster/images/imgCmnBtn2.png"))); // NOI18N
        btnCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelMouseClicked(evt);
            }
        });
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBodyLayout = new javax.swing.GroupLayout(panelBody);
        panelBody.setLayout(panelBodyLayout);
        panelBodyLayout.setHorizontalGroup(
            panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBodyLayout.createSequentialGroup()
                .addContainerGap(114, Short.MAX_VALUE)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBodyLayout.createSequentialGroup()
                        .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBodyLayout.createSequentialGroup()
                                .addComponent(lblStart1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(txtGiftVoucherSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblStart, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtGiftVoucherStartNo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(txtGiftVoucherEndNo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelBodyLayout.createSequentialGroup()
                                .addComponent(lblStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(dtChFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(lblStartDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(dtChToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelBodyLayout.createSequentialGroup()
                                    .addComponent(lbTotalValue, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtTotalValue))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelBodyLayout.createSequentialGroup()
                                    .addComponent(lblGiftVoucherValue, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(10, 10, 10)
                                    .addComponent(cmbVoucherValue, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtGiftVoucherAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)))
                            .addGroup(panelBodyLayout.createSequentialGroup()
                                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblGroupName2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCostCode, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtGiftVoucherCode, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtGiftVoucherName, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(82, 82, 82))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBodyLayout.createSequentialGroup()
                        .addComponent(lblFormName, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(277, 277, 277))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBodyLayout.createSequentialGroup()
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
        );
        panelBodyLayout.setVerticalGroup(
            panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBodyLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblFormName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCostCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGiftVoucherCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGroupName2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGiftVoucherName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStart1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtGiftVoucherStartNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblStart, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtGiftVoucherSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtGiftVoucherEndNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbTotalValue, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalValue, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGiftVoucherValue, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbVoucherValue, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGiftVoucherAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dtChFromDate, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(lblStartDate1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dtChToDate, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(lblStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addGroup(panelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        panelLayout.add(panelBody, new java.awt.GridBagConstraints());

        getContentPane().add(panelLayout, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void searchGiftVoucherCode() {
        try {
            flag = true;
            //new frmSearchForm(this,"frmReason").setVisible(true);
            clsUtility obj=new clsUtility();
            obj.funCallForSearchForm("GiftVoucher");
            new frmSearchFormDialog(this, true).setVisible(true);
            if (clsGlobalVarClass.gSearchItemClicked) {
                btnNew.setText("UPDATE");//UpdateD
                btnNew.setMnemonic('u');
                Object[] data = clsGlobalVarClass.gArrListSearchData.toArray();
                setData(data);
                clsGlobalVarClass.gSearchItemClicked = false;
            }
        } catch (Exception e) {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }
    private void txtGiftVoucherCodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtGiftVoucherCodeMouseClicked

        searchGiftVoucherCode();
    }//GEN-LAST:event_txtGiftVoucherCodeMouseClicked
    /**
     * This method is used to generate gift voucher code
     *
     * @return string
     */
    public String generateGiftVoucherCode() {
        String retGiftVoucherCode = "";
        try {
            sql = "select count(dblLastNo) from tblinternal where strTransactionType='GiftVoucher'";
            ResultSet rsGiftVoucherCode = clsGlobalVarClass.dbMysql.executeResultSet(sql);
            rsGiftVoucherCode.next();
            int cntGiftVoucher = rsGiftVoucherCode.getInt(1);
            rsGiftVoucherCode.close();
            if (cntGiftVoucher > 0) {
                sql = "select dblLastNo from tblinternal where strTransactionType='GiftVoucher'";
                rsGiftVoucherCode = clsGlobalVarClass.dbMysql.executeResultSet(sql);
                rsGiftVoucherCode.next();
                long gvCode = rsGiftVoucherCode.getLong(1);
                gvCode = gvCode + 1;
                retGiftVoucherCode = "GV" + String.format("%07d", gvCode);
                sql = "update tblinternal set dblLastNo='" + gvCode + "' where strTransactionType='GiftVoucher'";
                clsGlobalVarClass.dbMysql.execute(sql);
            } else {
                retGiftVoucherCode = "GV0000001";
                sql = "insert into tblinternal values('GiftVoucher'," + 1 + ")";
                clsGlobalVarClass.dbMysql.execute(sql);
            }

        } catch (Exception e) {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
        return retGiftVoucherCode;
    }

    /**
     * This method is used to check duplicate gv name
     *
     * @param TestFieldName
     * @return boolean
     */
    public boolean funCheckDuplicateGVName(String TestFieldName) {
        sql = "";
        ResultSet rsGiftVoucherName;
        boolean flgDuplicateGVName = false;
        try {
            if ("txtGiftVoucherName".equals(TestFieldName)) {
                sql = "select count(*) from tblgiftvoucher where strGiftVoucherName='" + txtGiftVoucherName.getText() + "'";
            }
            if ("txtGiftVoucherSeries".equals(TestFieldName)) {
                sql = "select count(*) from tblgiftvoucher where strGiftVoucherSeries='" + txtGiftVoucherSeries.getText() + "'";
            }
            rsGiftVoucherName = clsGlobalVarClass.dbMysql.executeResultSet(sql);
            rsGiftVoucherName.next();

            if (rsGiftVoucherName.getInt(1) > 0) {
                flgDuplicateGVName = true;
            }
            rsGiftVoucherName.close();
        } catch (Exception e) {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
        return flgDuplicateGVName;
    }

    /**
     * This method is used to validate date
     *
     * @return boolean
     */
    public boolean funValidateFields() {
        boolean flgValidate = true;
        try {
            if (!clsGlobalVarClass.validateEmpty(txtGiftVoucherName.getText())) {
                System.out.println("txtGiftVoucherName" + txtGiftVoucherName.getText());
                JOptionPane.showMessageDialog(this, "Please Enter Gift Voucher Name");
                flgValidate = false;
            } else if (!clsGlobalVarClass.validateEmpty(txtGiftVoucherSeries.getText())) {
                JOptionPane.showMessageDialog(this, "Please Enter Gift Voucher Series");
                flgValidate = false;
            } else if (!clsGlobalVarClass.validateNumbers(txtGiftVoucherStartNo.getText())) {
                JOptionPane.showMessageDialog(this, "Please Enter Only numbers in Start No");
                flgValidate = false;
            } else if (!clsGlobalVarClass.validateNumbers(txtGiftVoucherEndNo.getText())) {
                JOptionPane.showMessageDialog(this, "Please Enter Only numbers in End No");
                flgValidate = false;
            } else if (!clsGlobalVarClass.validateNumbers(txtGiftVoucherAmount.getText())) {
                JOptionPane.showMessageDialog(this, "Please Enter Only numbers in Gift Voucher Value");
                flgValidate = false;
            }

        } catch (Exception e) {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
        return flgValidate;
    }

    /**
     * This method is used to save gift voucher
     */
    public void funSaveGiftVoucher() {
        try {
            if (cmbVoucherValue.getSelectedItem().toString().trim().equals("Discount %")) {
                if (Double.parseDouble(txtGiftVoucherAmount.getText()) < 0 || Double.parseDouble(txtGiftVoucherAmount.getText()) > 100) {
                    new frmOkPopUp(this, "Invalid discount percentage", "Error", 1).setVisible(true);
                    txtGiftVoucherAmount.requestFocus();
                    return;
                }
            }
            if (cmbVoucherValue.getSelectedItem().toString().trim().equals("Value")) {
                if (Double.parseDouble(txtGiftVoucherAmount.getText()) < 0) {
                    new frmOkPopUp(this, "Invalid Discount Value", "Error", 1).setVisible(true);
                    txtGiftVoucherAmount.requestFocus();
                    txtGiftVoucherAmount.requestFocus();
                    return;
                }
            }
            clsUtility obj=new clsUtility();
            if (!obj.funCheckLength(txtGiftVoucherName.getText(), 10)) {
                new frmOkPopUp(this, "Gift Voucher  Name length must be less than 10", "Error", 0).setVisible(true);
                txtGiftVoucherName.requestFocus();
                return;
            }
            if (!obj.funCheckAlphabatesOnly(txtGiftVoucherSeries.getText())) {
                new frmOkPopUp(this, "Please Enter Only Character In Gift Voucher Series", "Error", 0).setVisible(true);
                txtGiftVoucherSeries.requestFocus();
                return;
            }
            if (!obj.funCheckLength(txtGiftVoucherSeries.getText(), 10)) {
                new frmOkPopUp(this, "Gift Voucher Series Code must be less than 10", "Error", 0).setVisible(true);
                txtGiftVoucherSeries.requestFocus();
                return;
            }
            if (Double.parseDouble(txtGiftVoucherAmount.getText()) <= 0) {
                new frmOkPopUp(this, "Gift Voucher Value Mast be greater than 0", "Error", 0).setVisible(true);
                txtGiftVoucherAmount.requestFocus();
                return;
            }
            if (Integer.parseInt(txtGiftVoucherStartNo.getText()) < 0) {
                new frmOkPopUp(this, "Invalid Start No. ", "Error", 0).setVisible(true);
                txtGiftVoucherStartNo.requestFocus();
                return;
            }
            if (Integer.parseInt(txtGiftVoucherEndNo.getText()) < 0) {
                new frmOkPopUp(this, "Invalid End No No. ", "Error", 0).setVisible(true);
                txtGiftVoucherEndNo.requestFocus();
                return;
            }
            if (!funCheckGiftVoucherSeriesNo()) {
                return;
            }

            Date dt1 = dtChFromDate.getDate();
            int d1 = dt1.getDate();
            int m1 = dt1.getMonth() + 1;
            int y1 = dt1.getYear() + 1900;
            dteFromDate = y1 + "-" + m1 + "-" + d1;
            Date dt2 = dtChToDate.getDate();
            int d2 = dt2.getDate();
            int m2 = dt2.getMonth() + 1;
            int y2 = dt2.getYear() + 1900;
            dteToDate = y2 + "-" + m2 + "-" + d2;

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date date1 = sdf.parse(dteFromDate);
            Date date2 = sdf.parse(dteToDate);
            if (date1.after(date2)) {
                new frmOkPopUp(this, "Invalid To Date", "Error", 0).setVisible(true);
                return;
            }
            long diff = date2.getTime() - date2.getTime();
            if (diff < 0) {
                new frmOkPopUp(this, "Invalid To Date", "Error", 1).setVisible(true);
                return;
            }

            // clsGlobalVarClass.dbMysql.funStartTransaction();
            giftVoucherCode = generateGiftVoucherCode();
            sql = "insert into tblgiftvoucher (strGiftVoucherCode,strGiftVoucherName,strGiftVoucherSeries,intGiftVoucherStartNo,"
                    + "intGiftVoucherEndNo,intTotalGiftVouchers,strGiftVoucherValueType,dblGiftVoucherValue,dteValidFrom,dteValidTo,"
                    + "strUserCreated,strUserEdited,dteDateCreated,dteDateEdited)"
                    + " values('" + giftVoucherCode + "','" + txtGiftVoucherName.getText() + "','" + txtGiftVoucherSeries.getText() + "','"
                    + txtGiftVoucherStartNo.getText() + "','" + txtGiftVoucherEndNo.getText() + "','" + txtTotalValue.getText() + "','"
                    + cmbVoucherValue.getSelectedItem().toString() + "','" + txtGiftVoucherAmount.getText() + "','"
                    + dteFromDate + "','" + dteToDate + "','" + clsGlobalVarClass.gUserCode + "','" + clsGlobalVarClass.gUserCode + "','"
                    + clsGlobalVarClass.getCurrentDateTime() + "','" + clsGlobalVarClass.getCurrentDateTime() + "')";
            //System.out.println(sql);

            int exc = clsGlobalVarClass.dbMysql.execute(sql);
            if (exc > 0) {
                System.out.println("Client Code=" + clsGlobalVarClass.gClientCode);
                if (clsGlobalVarClass.gClientCode.equals("009.001")) {
                    if (funPostGFDataTORMS("Save")) {
                        new frmOkPopUp(this, "Gift Voucher Save Succesfully ", "Sucessful", 3).setVisible(true);
                        funClearFields();
                        txtGiftVoucherName.requestFocus();
                        // clsGlobalVarClass.dbMysql.funCommitTransaction();
                    } else {
                        // clsGlobalVarClass.dbMysql.funRollbackTransaction();
                        new frmOkPopUp(this, "Failed to Save Gift Voucher ", "Error", 1).setVisible(true);
                    }
                } else {
                    new frmOkPopUp(this, "Gift Voucher Save Succesfully ", "Sucessful", 3).setVisible(true);
                    funClearFields();
                    txtGiftVoucherName.requestFocus();
                    //clsGlobalVarClass.dbMysql.funCommitTransaction();
                }
            }
        } catch (Exception e) {
            // clsGlobalVarClass.dbMysql.funRollbackTransaction();
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }

    /**
     * This method is used to post gv to rms
     *
     * @param transType
     * @return boolean
     */
    public boolean funPostGFDataTORMS(String transType) {
        boolean flgRFIDReturn = false;
        Connection conRMS = null;
        int customerType = 0;
        try {
            String rmsConURL = "jdbc:sqlserver://" + clsGlobalVarClass.gRFIDDBServerName + ":1433;user=" + clsGlobalVarClass.gRFIDDBUserName + ";password=" + clsGlobalVarClass.gRFIDDBPassword + ";database=" + clsGlobalVarClass.gRFIDDBName + "";
            //System.out.println("RMS Con="+rmsConURL);
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conRMS = DriverManager.getConnection(rmsConURL);
            conRMS.setAutoCommit(false);

            if (transType.equalsIgnoreCase("Save")) {
                sql = "insert into tblgiftvouchermaster (strGiftVoucherCode,strGiftVoucherName,strGiftVoucherSeries,intGiftVoucherStartNo,"
                        + "intGiftVoucherEndNo,intTotalGiftVouchers,strGiftVoucherValueType,dblGiftVoucherValue,dteValidFrom,dteValidTo,"
                        + "strUserCreated,strUserEdited,dteDateCreated,dteDateEdited)"
                        + " values('" + giftVoucherCode + "','" + txtGiftVoucherName.getText() + "','" + txtGiftVoucherSeries.getText() + "','"
                        + txtGiftVoucherStartNo.getText() + "','" + txtGiftVoucherEndNo.getText() + "','" + txtTotalValue.getText() + "','"
                        + cmbVoucherValue.getSelectedItem().toString() + "','" + txtGiftVoucherAmount.getText() + "','"
                        + dteFromDate + "','" + dteToDate + "','" + clsGlobalVarClass.gUserCode + "','" + clsGlobalVarClass.gUserCode + "','"
                        + clsGlobalVarClass.getCurrentDateTime() + "','" + clsGlobalVarClass.getCurrentDateTime() + "')";
            } else {
                sql = "update tblgiftvouchermaster set strGiftVoucherName='" + txtGiftVoucherName.getText()
                        + "',strGiftVoucherSeries='" + txtGiftVoucherSeries.getText() + "'"
                        + ",intGiftVoucherStartNo=" + txtGiftVoucherStartNo.getText() + ",intGiftVoucherEndNo=" + txtGiftVoucherEndNo.getText()
                        + ",intTotalGiftVouchers=" + txtTotalValue.getText() + ",strGiftVoucherValueType='"
                        + cmbVoucherValue.getSelectedItem().toString() + "',dblGiftVoucherValue='" + txtGiftVoucherAmount.getText()
                        + "',dteValidFrom='" + dteFromDate + "',dteValidTo='" + dteToDate + "'"
                        + ",strUserEdited='" + clsGlobalVarClass.gUserCode + "',dteDateEdited='"
                        + clsGlobalVarClass.getCurrentDateTime()
                        + "' where strGiftVoucherCode='" + txtGiftVoucherCode.getText() + "'";
            }
            System.out.println(sql);
            Statement st = conRMS.createStatement();
            st.execute(sql);
            conRMS.commit();
            flgRFIDReturn = true;

        } catch (Exception e) {
            flgRFIDReturn = false;
            try {
                conRMS.rollback();
            } catch (Exception ex) {
            }
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        } finally {
            try {
                conRMS.close();
            } catch (Exception ex) {
            }
            return flgRFIDReturn;
        }
    }

    /**
     * This method is used to update gift voucher
     */
    public void funUpdateGiftVoucher() {
        try {
            if (cmbVoucherValue.getSelectedItem().toString().trim().equals("Discount %")) {
                if (Double.parseDouble(txtGiftVoucherAmount.getText()) < 0 || Double.parseDouble(txtGiftVoucherAmount.getText()) > 100) {
                    new frmOkPopUp(this, "Invalid discount percentage", "Error", 1).setVisible(true);
                    txtGiftVoucherAmount.requestFocus();
                    return;
                }
            }
            if (cmbVoucherValue.getSelectedItem().toString().trim().equals("Value")) {
                if (Double.parseDouble(txtGiftVoucherAmount.getText()) < 0) {
                    new frmOkPopUp(this, "Invalid Discount Value", "Error", 1).setVisible(true);
                    txtGiftVoucherAmount.requestFocus();
                    return;
                }
            }
            clsUtility obj=new clsUtility();
            if (!obj.funCheckLength(txtGiftVoucherName.getText(), 10)) {
                new frmOkPopUp(this, "Gift Voucher  Name length must be less than 10", "Error", 0).setVisible(true);
                txtGiftVoucherName.requestFocus();
                return;
            }
            if (!obj.funCheckAlphabatesOnly(txtGiftVoucherSeries.getText())) {
                new frmOkPopUp(this, "Please Enter Only Character In Gift Voucher Series", "Error", 0).setVisible(true);
                txtGiftVoucherSeries.requestFocus();
                return;
            }
            if (!obj.funCheckLength(txtGiftVoucherSeries.getText(), 10)) {
                new frmOkPopUp(this, "Gift Voucher Series Code must be less than 10", "Error", 0).setVisible(true);
                txtGiftVoucherSeries.requestFocus();
                return;
            }
            if (Double.parseDouble(txtGiftVoucherAmount.getText()) <= 0) {
                new frmOkPopUp(this, "Gift Voucher Value Mast be greater than 0", "Error", 0).setVisible(true);
                txtGiftVoucherAmount.requestFocus();
                return;
            }
            if (Integer.parseInt(txtGiftVoucherStartNo.getText()) < 0) {
                new frmOkPopUp(this, "Invalid Start No. ", "Error", 0).setVisible(true);
                txtGiftVoucherStartNo.requestFocus();
                return;
            }
            if (Integer.parseInt(txtGiftVoucherEndNo.getText()) < 0) {
                new frmOkPopUp(this, "Invalid End No No. ", "Error", 0).setVisible(true);
                txtGiftVoucherEndNo.requestFocus();
                return;
            }
            if (!funCheckGiftVoucherSeriesNo()) {
                return;
            }
            Date dt1 = dtChFromDate.getDate();
            int d1 = dt1.getDate();
            int m1 = dt1.getMonth() + 1;
            int y1 = dt1.getYear() + 1900;
            dteFromDate = y1 + "-" + m1 + "-" + d1;
            Date dt2 = dtChToDate.getDate();
            int d2 = dt2.getDate();
            int m2 = dt2.getMonth() + 1;
            int y2 = dt2.getYear() + 1900;
            dteToDate = y2 + "-" + m2 + "-" + d2;
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date date1 = sdf.parse(dteFromDate);
            Date date2 = sdf.parse(dteToDate);
            if (date1.after(date2)) {
                new frmOkPopUp(this, "Invalid To Date", "Error", 0).setVisible(true);
                return;
            }

            long diff = date2.getTime() - date2.getTime();
            if (diff < 0) {
                new frmOkPopUp(this, "Invalid To Date", "Error", 1).setVisible(true);
                return;
            }

            //clsGlobalVarClass.dbMysql.funStartTransaction();
            sql = "update tblgiftvoucher set strGiftVoucherName='" + txtGiftVoucherName.getText() + "',strGiftVoucherSeries='" + txtGiftVoucherSeries.getText() + "'"
                    + ",intGiftVoucherStartNo=" + txtGiftVoucherStartNo.getText() + ",intGiftVoucherEndNo=" + txtGiftVoucherEndNo.getText()
                    + ",intTotalGiftVouchers=" + txtTotalValue.getText() + ",strGiftVoucherValueType='" + cmbVoucherValue.getSelectedItem().toString()
                    + "',dblGiftVoucherValue='" + txtGiftVoucherAmount.getText() + "',dteValidFrom='" + dteFromDate + "',dteValidTo='" + dteToDate + "'"
                    + ",strUserEdited='" + clsGlobalVarClass.gUserCode + "',dteDateEdited='" + clsGlobalVarClass.getCurrentDateTime() + "' where strGiftVoucherCode='" + txtGiftVoucherCode.getText() + "'";

            int exc = clsGlobalVarClass.dbMysql.execute(sql);
            if (exc > 0) {
                if (clsGlobalVarClass.gClientCode.equals("009.001")) {
                    if (funPostGFDataTORMS("Update")) {
                        new frmOkPopUp(this, "Gift Voucher Update Succesfully ", "Sucessful", 1).setVisible(true);
                        funClearFields();
                        txtGiftVoucherName.requestFocus();
                        // clsGlobalVarClass.dbMysql.funCommitTransaction();
                    } else {
                        // clsGlobalVarClass.dbMysql.funRollbackTransaction();
                        new frmOkPopUp(this, "Failed To Update", "Error", 1).setVisible(true);
                    }
                } else {
                    new frmOkPopUp(this, "Gift Voucher Save Succesfully ", "Sucessful", 1).setVisible(true);
                    funClearFields();
                    txtGiftVoucherName.requestFocus();
                    //clsGlobalVarClass.dbMysql.funCommitTransaction();
                }
            }
        } catch (Exception e) {
            //clsGlobalVarClass.dbMysql.funRollbackTransaction();
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }

    /**
     * This method is used to clear fields
     */
    public void funClearFields() {
        try {
            txtGiftVoucherCode.setText("");
            txtGiftVoucherName.setText("");
            txtGiftVoucherSeries.setText("");
            txtGiftVoucherStartNo.setText("");
            txtGiftVoucherEndNo.setText("");
            txtGiftVoucherAmount.setText("");
            txtTotalValue.setText("");
            cmbVoucherValue.setSelectedIndex(0);
            txtGiftVoucherAmount.setText("");
            btnNew.setText("SAVE");
            btnNew.setMnemonic('s');
            dtChFromDate.setDate(clsGlobalVarClass.gCalendarDate);
            dtChToDate.setDate(clsGlobalVarClass.gCalendarDate);
            txtGiftVoucherCode.requestFocus();

        } catch (Exception e) {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }

    /**
     * This method is used to check voucher series number
     *
     * @return boolean
     */
    public boolean funCheckGiftVoucherSeriesNo() {
        boolean flgGVSeriesNo = true;
        if (clsGlobalVarClass.validateNumbers(txtGiftVoucherEndNo.getText())) {
            if (Integer.parseInt(txtGiftVoucherStartNo.getText()) < 0 || Integer.parseInt(txtGiftVoucherEndNo.getText()) < 0) {
                new frmOkPopUp(this, "Invalid No. ", "Error", 0).setVisible(true);
                //return;
                flgGVSeriesNo = false;
            }
            if (Integer.parseInt(txtGiftVoucherEndNo.getText()) - Integer.parseInt(txtGiftVoucherStartNo.getText()) > 0) {
                txtTotalValue.setText(String.valueOf(Integer.parseInt(txtGiftVoucherEndNo.getText()) - Integer.parseInt(txtGiftVoucherStartNo.getText())));
                cmbVoucherValue.requestFocus();
            } else {
                new frmOkPopUp(this, "Start No. Must be less than End No. ", "Error", 0).setVisible(true);
                flgGVSeriesNo = false;
            }
        }
        return flgGVSeriesNo;
    }
    private void txtGiftVoucherNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtGiftVoucherNameMouseClicked
        // TODO add your handling code here:
        if (!clsGlobalVarClass.gClientCode.equals("009.001")) {
            if (txtGiftVoucherName.getText().length() == 0) {
                new frmAlfaNumericKeyBoard(this, true, "1", "Enter GiftVoucher Name").setVisible(true);
                txtGiftVoucherName.setText(clsGlobalVarClass.gKeyboardValue);
            } else {
                new frmAlfaNumericKeyBoard(this, true, txtGiftVoucherName.getText(), "1", "Enter GiftVoucher Name").setVisible(true);
                txtGiftVoucherName.setText(clsGlobalVarClass.gKeyboardValue);
            }
        }
    }//GEN-LAST:event_txtGiftVoucherNameMouseClicked

    private void txtGiftVoucherNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGiftVoucherNameKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            txtGiftVoucherSeries.requestFocus();
        }
    }//GEN-LAST:event_txtGiftVoucherNameKeyPressed

    private void txtGiftVoucherSeriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtGiftVoucherSeriesMouseClicked

        // TODO add your handling code here:
        if (!clsGlobalVarClass.gClientCode.equals("009.001")) {
            if (txtGiftVoucherSeries.getText().length() == 0) {
                new frmAlfaNumericKeyBoard(this, true, "1", "Enter GiftVoucher Series Code").setVisible(true);
                txtGiftVoucherSeries.setText(clsGlobalVarClass.gKeyboardValue);
            } else {
                new frmAlfaNumericKeyBoard(this, true, txtGiftVoucherSeries.getText(), "1", "Enter GiftVoucher Series Code").setVisible(true);
                txtGiftVoucherSeries.setText(clsGlobalVarClass.gKeyboardValue);
            }
        }
    }//GEN-LAST:event_txtGiftVoucherSeriesMouseClicked

    private void txtGiftVoucherSeriesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGiftVoucherSeriesKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            txtGiftVoucherStartNo.requestFocus();
        }
    }//GEN-LAST:event_txtGiftVoucherSeriesKeyPressed

    private void txtGiftVoucherStartNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGiftVoucherStartNoFocusLost
        // TODO add your handling code here:
        if (clsGlobalVarClass.validateNumbers(txtGiftVoucherStartNo.getText())) {
            txtGiftVoucherEndNo.requestFocus();
        }
    }//GEN-LAST:event_txtGiftVoucherStartNoFocusLost

    private void txtGiftVoucherStartNoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtGiftVoucherStartNoMouseClicked
        // TODO add your handling code here:
        if (!clsGlobalVarClass.gClientCode.equals("009.001")) {
            if (txtGiftVoucherStartNo.getText().length() == 0) {
                new frmNumericKeyboard(this, true, "","Long", "Enter GiftVoucher Start No.").setVisible(true);
                txtGiftVoucherStartNo.setText(clsGlobalVarClass.gNumerickeyboardValue);
            } else {
                new frmNumericKeyboard(this, true, txtGiftVoucherStartNo.getText(), "Long", "Enter GiftVoucher Start No.").setVisible(true);
                txtGiftVoucherStartNo.setText(clsGlobalVarClass.gNumerickeyboardValue);
            }
        }
    }//GEN-LAST:event_txtGiftVoucherStartNoMouseClicked

    private void txtGiftVoucherStartNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGiftVoucherStartNoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            if (clsGlobalVarClass.validateNumbers(txtGiftVoucherStartNo.getText())) {
                txtGiftVoucherEndNo.requestFocus();
            }
        }
    }//GEN-LAST:event_txtGiftVoucherStartNoKeyPressed

    private void txtGiftVoucherEndNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGiftVoucherEndNoFocusLost
        // TODO add your handling code here:
        if (!funCheckGiftVoucherSeriesNo()) {
            return;
        }
    }//GEN-LAST:event_txtGiftVoucherEndNoFocusLost

    private void txtGiftVoucherEndNoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtGiftVoucherEndNoMouseClicked
        // TODO add your handling code here:
        if (!clsGlobalVarClass.gClientCode.equals("009.001")) {
            if (txtGiftVoucherEndNo.getText().length() == 0) {
                new frmNumericKeyboard(this, true, "","Long", "Enter GiftVoucher End No.").setVisible(true);
                txtGiftVoucherEndNo.setText(clsGlobalVarClass.gNumerickeyboardValue);
            } else {
                new frmNumericKeyboard(this, true, txtGiftVoucherEndNo.getText(), "Long", "Enter GiftVoucher End No.").setVisible(true);
                txtGiftVoucherEndNo.setText(clsGlobalVarClass.gNumerickeyboardValue);
            }
        }
    }//GEN-LAST:event_txtGiftVoucherEndNoMouseClicked

    private void txtGiftVoucherEndNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGiftVoucherEndNoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            if (clsGlobalVarClass.validateNumbers(txtGiftVoucherEndNo.getText())) {
                txtTotalValue.setText(String.valueOf(Integer.parseInt(txtGiftVoucherEndNo.getText()) - Integer.parseInt(txtGiftVoucherStartNo.getText())));
                cmbVoucherValue.requestFocus();
            }
        }
    }//GEN-LAST:event_txtGiftVoucherEndNoKeyPressed

    private void txtTotalValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTotalValueMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalValueMouseClicked

    private void txtTotalValueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalValueKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            cmbVoucherValue.requestFocus();
        }
    }//GEN-LAST:event_txtTotalValueKeyPressed

    private void cmbVoucherValueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbVoucherValueKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            txtGiftVoucherAmount.requestFocus();
        }
    }//GEN-LAST:event_cmbVoucherValueKeyPressed

    private void txtGiftVoucherAmountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtGiftVoucherAmountMouseClicked
        // TODO add your handling code here:
        if (!clsGlobalVarClass.gClientCode.equals("009.001")) {
            if (txtGiftVoucherAmount.getText().length() == 0) {
                new frmNumericKeyboard(this, true, "","Long", "Enter GiftVoucher Amount").setVisible(true);
                txtGiftVoucherAmount.setText(clsGlobalVarClass.gNumerickeyboardValue);
            } else {
                new frmNumericKeyboard(this, true, txtGiftVoucherAmount.getText(), "Long", "Enter GiftVoucher Amount").setVisible(true);
                txtGiftVoucherAmount.setText(clsGlobalVarClass.gNumerickeyboardValue);
            }
        }
    }//GEN-LAST:event_txtGiftVoucherAmountMouseClicked

    private void txtGiftVoucherAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGiftVoucherAmountKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            dtChFromDate.requestFocus();
        }
    }//GEN-LAST:event_txtGiftVoucherAmountKeyPressed
    public void funSaveAndUpdateOperations() {
        try {
            if (btnNew.getText().equalsIgnoreCase("SAVE")) {
                if (funValidateFields()) {
                    if (funCheckDuplicateGVName("txtGiftVoucherName")) {
                        JOptionPane.showMessageDialog(this, "Gift Voucher Name is already exist");
                        txtGiftVoucherName.requestFocus();
                    } else if (funCheckDuplicateGVName("txtGiftVoucherSeries")) {
                        JOptionPane.showMessageDialog(this, "Gift Voucher Series is already exist");
                        txtGiftVoucherSeries.requestFocus();
                    } else {
                        //Add new GiftVoucher
                        funSaveGiftVoucher();
                    }
                }
            } else {
                if (funValidateFields()) {
                    funUpdateGiftVoucher();
                }
            }
        } catch (Exception e) {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }
    private void btnNewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewMouseClicked
        // TODO add your handling code here:
        funSaveAndUpdateOperations();
    }//GEN-LAST:event_btnNewMouseClicked

    private void btnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseClicked
        // TODO add your handling code here:
        try {
            funClearFields();

        } catch (Exception e) {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnResetMouseClicked

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        funClearFields();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseClicked
        // TODO add your handling code here:
        try {
            dispose();
            
        } catch (Exception e) {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
        clsGlobalVarClass.hmActiveForms.remove("GiftVoucherMaster");
    }//GEN-LAST:event_btnCancelMouseClicked

    private void txtGiftVoucherCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGiftVoucherCodeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == '?' || evt.getKeyChar() == '/') {
            searchGiftVoucherCode();
        }
        if(evt.getKeyCode()==10)
        {
            txtGiftVoucherName.requestFocus();
        }
    }//GEN-LAST:event_txtGiftVoucherCodeKeyPressed

    private void dtChFromDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dtChFromDateKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            dtChToDate.requestFocus();
        }
    }//GEN-LAST:event_dtChFromDateKeyPressed

    private void dtChToDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dtChToDateKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            btnNew.requestFocus();
        }
    }//GEN-LAST:event_dtChToDateKeyPressed

    private void btnNewKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnNewKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            funSaveAndUpdateOperations();
        }
    }//GEN-LAST:event_btnNewKeyPressed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        dispose();
         clsGlobalVarClass.hmActiveForms.remove("GiftVoucherMaster");
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        funSaveAndUpdateOperations();
    }//GEN-LAST:event_btnNewActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        clsGlobalVarClass.hmActiveForms.remove("GiftVoucherMaster");
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        clsGlobalVarClass.hmActiveForms.remove("GiftVoucherMaster");
    }//GEN-LAST:event_formWindowClosing
    /**
     * This method is used to set data
     *
     * @param data
     */
    private void setData(Object[] data) {
        try {
            txtGiftVoucherCode.setText(data[0].toString());
            sql = "select * from tblgiftvoucher where strGiftVoucherCode='" + data[0].toString() + "'";
            ResultSet voucherInfo = clsGlobalVarClass.dbMysql.executeResultSet(sql);
            if (voucherInfo.next()) {
                txtGiftVoucherName.setText(voucherInfo.getString(2));
                txtGiftVoucherSeries.setText(voucherInfo.getString(3));
                txtGiftVoucherStartNo.setText(voucherInfo.getString(4));
                txtGiftVoucherEndNo.setText(voucherInfo.getString(5));
                txtTotalValue.setText(voucherInfo.getString(6));
                String voucherValueType = voucherInfo.getString(7).toString();
                if (voucherValueType.trim().equalsIgnoreCase("Value")) {
                    if ("Value".equalsIgnoreCase(voucherValueType)) {
                        cmbVoucherValue.setSelectedIndex(0);
                    }
                }
                if ("Discount %".trim().equalsIgnoreCase(voucherValueType)) {
                    cmbVoucherValue.setSelectedIndex(1);
                }

                txtGiftVoucherAmount.setText(voucherInfo.getString(8));
                java.util.Date datefrm = new SimpleDateFormat("yyyy-MM-dd").parse(voucherInfo.getString(9));
                dtChFromDate.setDate(datefrm);
                java.util.Date dateTo = new SimpleDateFormat("yyyy-MM-dd").parse(voucherInfo.getString(10));
                dtChToDate.setDate(dateTo);
                voucherInfo.close();
            }
            voucherInfo.close();

        } catch (Exception e) {
            objUtility.funWriteErrorLog(e);
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmGiftVoucherMaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmGiftVoucherMaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmGiftVoucherMaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmGiftVoucherMaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmGiftVoucherMaster().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnReset;
    private javax.swing.JComboBox cmbVoucherValue;
    private com.toedter.calendar.JDateChooser dtChFromDate;
    private com.toedter.calendar.JDateChooser dtChToDate;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.JLabel lbTotalValue;
    private javax.swing.JLabel lblCostCode;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblEnd;
    private javax.swing.JLabel lblFormName;
    private javax.swing.JLabel lblGiftVoucherValue;
    private javax.swing.JLabel lblGroupName2;
    private javax.swing.JLabel lblHOSign;
    private javax.swing.JLabel lblModuleName;
    private javax.swing.JLabel lblPosName;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblStart;
    private javax.swing.JLabel lblStart1;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblStartDate1;
    private javax.swing.JLabel lblUserCode;
    private javax.swing.JLabel lblformName;
    private javax.swing.JPanel panelBody;
    private javax.swing.JPanel panelHeader;
    private javax.swing.JPanel panelLayout;
    private javax.swing.JTextField txtGiftVoucherAmount;
    private javax.swing.JTextField txtGiftVoucherCode;
    private javax.swing.JTextField txtGiftVoucherEndNo;
    private javax.swing.JTextField txtGiftVoucherName;
    private javax.swing.JTextField txtGiftVoucherSeries;
    private javax.swing.JTextField txtGiftVoucherStartNo;
    private javax.swing.JTextField txtTotalValue;
    // End of variables declaration//GEN-END:variables
}
